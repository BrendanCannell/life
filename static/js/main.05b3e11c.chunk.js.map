{"version":3,"sources":["matrix.js","redux.js","parse.js","components/AnimatedCanvas/index.js","components/InteractiveViewer/coordinates.js","components/InteractiveViewer/render-grid-lines.js","components/InteractiveViewer/render-edits.js","components/InteractiveViewer/index.js","components/icons/StepForward.js","components/ViewerControls/index.js","components/Menu/index.js","App.js","components/FPS/index.js","serviceWorker.js","index.js","../../lowlife/dist/lowlife.umd.js"],"names":["sqrt","Math","pow","Mult","n","v","x","y","Add","v1","v2","Subtract","Midpoint","Distance","Magnitude","initialState","viewerState","life","L","canvasContainer","center","scale","stepsPerFrame","stepsPending","translationPerStep","playing","suspended","editHistory","showingSpeedControls","showingDrawer","ViewerState","st","Editing","createSelectorCreator","defaultMemoize","prev","next","hash","LifeSelector","vst","Running","advanceOneFrame","createAction","fitToBounds","initializeBounds","pan","setScale","setLife","speedDown","speedUp","stepOnce","toggleCell","togglePlaying","toggleShowingDrawer","toggleShowingSpeedControls","updateCanvasContainer","zoom","reducer","createReducer","Step","stepsThisFrame","floor","FitToBounds","movement","payload","rle","str","bodyMatch","match","Error","lines","replace","split","livePairs","forEach","line","runs","run","count","parseInt","includes","i","push","trailing","FromRle","e","console","error","PI","FlushEditHistory","cellLocation","map","clientBounds","getBoundingClientRect","scaleX","width","scaleY","height","min","DefaultBounds","fixedPoint","scaleFactor","centerToFixed","canFree","lifeBounds","Edits","length","left","Infinity","right","top","bottom","max","createSelector","toggleCounts","Map","join","toggleCount","get","set","updates","locationStr","location","currentState","store","configureStore","middleware","thunk","devTools","actionSanitizer","action","type","toString","stateSanitizer","rest","viewerStateRest","AnimatedCanvas","props","onFrame","pendingRequest","canvas","useMemo","document","createElement","context","getContext","imageData","currentLogicalWidth","currentLogicalHeight","currentDevicePixelRatio","window","devicePixelRatio","withContainer","useCallback","container","cancelRequest","appendChild","makeRequest","requestAnimationFrame","animate","cancelAnimationFrame","timestamp","rect","pixelWidth","pixelHeight","createImageData","style","ref","className","GridToImageX","viewport","GridToImageY","RenderGridLines","colors","ctx","save","fillStyle","dead","fillRect","MIN_SCALE","restore","fade","FADE_EXPONENT","Array","_","r","g","b","GridLinesColor","xGrid","ceil","xImage","yGrid","yImage","RenderEdits","edits","edited","toggledOn","background","clearRect","alive","xImageLo","xImageHi","yImageLo","yImageHi","InteractiveViewer","dragContainer","editing","getState","m","mutators","lifeRenderColors","canvasContainerRef","useRef","dragContainerRef","lastTouchesRef","mouseDownRef","mouseHandlers","mousemove","event","mouseDown","current","client","clientX","clientY","hasDragged","grid","GridCoordinates","gridMovement","mouseup","HandleClick","CleanupMouseDown","mouseleave","Viewport","_Viewport","CurrentViewport","MemoizedRenderBackground","MemoizeRenderBackground","RenderBackground","HandleBackgroundFrame","opts","RenderCells","putImageData","MemoizedRenderCells","MemoizeRenderCells","HandleCellsFrame","MemoizedRenderEdits","MemoizeRenderEdits","HandleEditsFrame","useEffect","UpdateDragContainerRef","onMouseDown","timeStamp","key","addEventListener","onWheel","deltaY","Remove","removeEventListener","bind","HandleTouch","HandleKey","preventDefault","touch","eventTouches","touches","t","item","identifier","EventTouches","lastTouches","newAndUpdatedTouches","trackedTouches","eventTouch","oldVersion","find","trackedTouch","OldVersion","initial","noTap","slice","UpdateTrackedTouches","touchCount","t1","t2","isTap","lastTouchCount","IsTap","isDrag","isPinch","HandleDrag","touch1","touch2","currentTouchCenter","initialTouchCenter","currentClientDistance","initialGridDistance","HandlePinch","v0","viewportWidth","viewportHeight","bounds","pixelsFromLeft","pixelsFromTop","horizontalScale","verticalScale","centerX","centerY","clientWidth","clientHeight","topleft","bottomright","MemoizeWith","Equal","Memoizer","Fn","Identity","StepForward","stroke","fill","strokeWidth","viewBox","xmlns","d","Controls","size","running","useSelector","ems","mainStyle","MainStyle","iconProps","PlayPause","MdPause","MdPlayArrow","Spacer","speedControls","display","flexDirection","position","onClick","justifyContent","alignItems","backgroundColor","controlsBackground","padding","borderRadius","color","controlsForeground","Menu","patternListStyle","patternButtonStyle","CSSTransition","in","timeout","classNames","Patterns","pattern","name","filename","a","utf8Decoder","TextDecoder","fetch","res","reader","body","getReader","read","value","done","decode","log","toggledOff","border","controlsHighlight","viewerActionCreators","fps","zIndex","textShadow","strs","j","contrastShadow","useState","setFps","lastTimestamp","lastFpsTimestamp","requestTimestamp","updateTimestamp","now","visibility","App","dispatch","useDispatch","useStore","fn","obj","mapped","mapObj","actionCreator","pointerEvents","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","_regeneratorRuntime","_toConsumableArray","_defineProperty","_slicedToArray","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","getOwnPropertyDescriptors","defineProperties","defineProperty","exports","_marked","mark","Living","_marked2","Living$2","filterPair","_ref","_ref2","val","fromEntries","entries","asPairs","pairs","isIterable","Symbol","iterator","compose","f","partialOpts","optsNow","optsLater","xf","xs","result","empty","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","_ref5","_ref4","err","return","population","setName","stripLeft","prefix","substring","concat","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref8","_ref7","isArray","N","S","W","E","NW","NE","SW","SE","SIDES","Var","stack","Get","let","bindTo","tmp","Canon","Branch","Edge","Leaf","Neighborhood","Allocate","MakeMakeCanonicalizingConstructor","canonicalizable","Canonicalize","_ref9","Hash","SetDerived","newObj","_Canon","GetCanon","SetCanon","Free","bin","canonical","MakeCanonicalizer","Constructor","CanonicalizingConstructor","FNV_PRIME","FNV_OFFSET_BASIS","of","len","checkNaN","ofArray","array","isNaN","TypeError","subhashes","ToCanonicalizeNeighborhoodConstructor","_ref10","Next","BranchGetHash","GetHash","EdgeGetHash","LeafGetHash","LEAF_SIZE","SIZE","Canonicalizable","NeighborhoodEqual","node","edges","corners","NeighborhoodHash","_ref11","NeighborhoodSetDerived","neighborhood","neighbors","MemoizeWithTable","memoTable","Memoized","arg","memo","WithClearedMemoTable","clear","WEST_EDGE","EAST_EDGE","LeafAllocate","leaf","Int32Array","NaN","log2","lsb","LeafEqual","LeafSetDerived","west","east","population$1","row","CanonicalizeLeafConstructor","CheckBounds","Throw","explanation","Copy","_ref14","raw","original","copy","ce","cc","oe","oc","CopyDerived","LeafFree","LeafMutate","_ref15","state","_ref16","mask","PrimitiveLeafGet","LeafGetPopulation","wrap","_context","stop","max$1","min$1","BoundingRect","leafLeft","leafTop","boundingRect","gridY","butWestBit","westernmostSetBit","easternmostSetBit","gridWest","gridEast","CanonicalizeConstructor","FromLiving","_ref17","locations","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref18","_ref19","GetCorner","direction","GetEdge","GetPopulation","GetSize","_ref20","N$1","S$1","W$1","E$1","NW$1","NE$1","SW$1","SE$1","rowN","westSiblingN","eastSiblingN","siblingCountN_0","familyCountN_0","familyCountN_1","westSibling","eastSibling","siblingCount_0","siblingCount_1","familyCount_0","familyCount_1","westS","eastS","rowS","westSiblingS","eastSiblingS","siblingCountS_0","siblingCountS_1","familyCountS_0","familyCountS_1","xor0","xor1","nextRow","PrimitiveGet","Render","leafLeftGrid","leafTopGrid","renderCfg","pixelsPerCell","viewportLeftGrid","viewportRightGrid","viewportTopGrid","viewportBottomGrid","data","imageWidth","imageHeight","leafRightGrid","leafBottomGrid","leafTopImage","leafLeftImage","boundedLeftGrid","boundedRightGrid","columnStart","rowStart","columnEnd","rowEnd","rowIndex","yOffset","columnIndex","_rowIndex","_row","cellTopImage","cellBottomImage","cellTopPx","cellBottomPx","_columnIndex","cellLeftImage","cellRightImage","cellLeftPx","cellRightPx","_y","_yOffset","_x","SetMany","_ref21","newLeaf","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref24","_ref23","constructors","checkIterable","withAllocate","LeafAllocateCtx","HASH","Copy$1","_ref25","Recur","edge","EdgeGetPopulation","New","_ref26","e0","e1","EdgeEqual","AllocateCtxEdge","AllocateBranch","CanonicalizeEdgeConstructor","EdgeHash","EdgeSetDerived","Canonicalizable$2","New$1","MemoizedCopy","Copy$2","Edge$1","BranchEqual","BranchGetCorner","branch","BranchGetEdge","BranchGetPopulation","EDGE_QUADRANTS","subhashes$1","QUADRANTS","index","offset","Copy$3","_ref31","EdgeCopy","QuadrantLocation","_Quadrant","Quadrant","_Quadrant$offset","dx","dy","_location","InBounds","_ref32","_ref33","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","Q","_Q$offset","_ref28","branchLeft","branchTop","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref30","_ref29$offset","quadrant","quadrantLeft","quadrantTop","quadrantRight","quadrantBottom","_ref34","partitions","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","loc","_QuadrantLocation","_ref35","_QuadrantLocation2","_ref36","BranchLiving","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_iterator8","_step8","_ref38","_ref37$offset","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_iterator9","_step9","_ref41","_ref40","_context2","t0","finish","_ref42","mixedStores","_len","quadrants","_key","storeGeneration","JSON","stringify","_ref43","sg","q","_ref44","branchLeftGrid","branchTopGrid","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_ref46","_ref45$offset","_ref47","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_ref50","_ref49","_QuadrantLocation3","Copy$4","BranchAllocateCtx","BranchAllocate","CanonicalizeBranchConstructor","_ref27","EdgeNew","LeafGetCorner","LeafGetEdge","BranchHash","HasLeafChildren","_i2","BranchSetDerived","_EDGE_QUADRANTS$i","sq0","sq1","BranchWithLeafChildrenSetDerived","_EDGE_QUADRANTS$i2","BranchWithBranchChildrenSetDerived","Canonicalizable$3","New$3","Branch$1","Render$2","LeafCase","BranchCase","NodeSwitch","Allocate$1","AC","FixByArg0","_ref51","DispatchByArg0","_len2","_key2","ToFixByArg0","FixByArg0Size","cases","DispatchByArg0Size","Case","_len3","_key3","ToFixByArg0Size","_len4","_key4","ToDispatchByArg0Size","recursiveFnNames","byArg0","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_f","MemoizeNext$1","_ref13","NewNeighborhood","_ref12","neighborsOffset","oppositeEdge","oppositeCorner","_i","_j","_oppositeEdge","_oppositeCorner","ToNewNeighborhood","CanonicalizeNeighborhoodConstructor","MemoizeNext","setMemoTable","MemoizeSetMany","MemoizedSetMany","ToMemoizeSetMany","copyMemoTable","MemoizeCopy","T","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_f2","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_f3","_i3","_nonrecursiveFnNames","_f4","GetEdgePopulation","tree","Grow","oldTree","oldSize","T$1","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_iterator17","_step17","_ref60","_ref59","_context3","root","SetMany$2","SetOrMutateMany","inPlace","withGridLocs","_ref61","_ref62","GridLoc","some","_ref63","method","FromRoot","_ref65","_ref66","Substore","_ref67","_Allocate","_Copy","_Free","pool","inUse","cleared","Clear","half","splice","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","Show","ToMakeCanonicalSubstore","storable","MakeSubstore","MakeCanonicalSubstore","substore","hashTable","MakeCanonicalStore","storables","MakeCanonicalSubstores","substores","MCS","s","ToMakeCanonicalStore","LetStore","EdgeAllocate","NeighborhoodAllocate","BranchCanon","EdgeCanon","LeafCanon","NeighborhoodCanon","Make","recycledStore","revocable","takeStore","newStore","rs","FromLiving$3","halfSize","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_ref57","_ref54","abs","offsetLocations","_ref55","_ref56","FromLiving$2","Get$2","Get$1","Set","SetMany$3","Go","Has","RGBAToInt32","rgba","Uint8ClampedArray","buffer","BoundingRect$2","_ref52","Copy$5","Empty","Next$2","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","side","Population","imageDataAsU8Clamped","colorsRGBA","Render$3","Values","factory"],"mappings":"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","file":"static/js/main.05b3e11c.chunk.js","sourcesContent":["let {sqrt, pow} = Math\n\nexport let Mult = (n, v) => ({x: n * v.x, y: n * v.y})\nexport let Add  = (v1, v2) => ({x: v1.x + v2.x, y: v1.y + v2.y})\nexport let Subtract = (v1, v2) => Add(v1, Mult(-1, v2))\nexport let Magnitude = ({x, y}) => sqrt(pow(x, 2) + pow(y, 2))\nexport let Midpoint = (v1, v2) => Mult(1/2, Add(v1, v2))\nexport let Distance = (v1, v2) => Magnitude(Subtract(v1, v2))","import {configureStore, createAction, createReducer, createSelector} from 'redux-starter-kit'\nimport {createSelectorCreator, defaultMemoize} from 'reselect'\nimport thunk from 'redux-thunk'\nimport * as L from 'lowlife'\nimport {FromRle} from \"./parse\"\nimport {Mult, Add, Subtract} from \"./matrix\"\n\nlet initialState = {\n  viewerState: {\n    life: L.Empty(),\n    canvasContainer: null,\n    center: null,\n    scale: null,\n    stepsPerFrame: 1/4,\n    stepsPending: 0,\n    translationPerStep: {x: 0, y: 0},\n    playing: false,\n    suspended: false,\n    editHistory: [],\n    showingSpeedControls: false,\n  },\n  showingDrawer: false,\n}\n\nexport let ViewerState = st => st.viewerState\n\nexport let AdvanceFrame = st => {\n  st.stepsPending += st.stepsPerFrame\n  Step(st, st.stepsPending)\n  let stepsThisFrame = Math.floor(st.stepsPending)\n  st.stepsPending -= stepsThisFrame\n}\n\nlet LifeSelector = createSelectorCreator(defaultMemoize, (prev, next) => (prev && prev.hash) === (next && next.hash))\nexport let Life = LifeSelector(vst => vst.life, x => x)\n\nexport let Editing = vst => !vst.playing\n\nexport let Running = vst => vst.playing && !vst.suspended\n\nexport let\n    advanceOneFrame = createAction('advanceOneFrame')\n  , fitToBounds = createAction('fitToBounds')\n  , initializeBounds = createAction('initializeBounds')\n  // , loadPattern = createAction('loadPattern')\n  , pan = createAction('pan')\n  , setScale = createAction('setScale')\n  , setLife = createAction('setLife')\n  , speedDown = createAction('speedDown')\n  , speedUp = createAction('speedUp')\n  , stepOnce = createAction('stepOnce')\n  , toggleCell = createAction('toggleCell')\n  , togglePlaying = createAction('togglePlaying')\n  , toggleShowingDrawer = createAction('toggleShowingDrawer')\n  , toggleShowingSpeedControls = createAction('toggleShowingSpeedControls')\n  , updateCanvasContainer = createAction('updateCanvasContainer')\n  , zoom = createAction('zoom')\n\nlet reducer = createReducer(initialState, {\n  [advanceOneFrame]: (st) => {\n    let vst = ViewerState(st)\n    vst.stepsPending += vst.stepsPerFrame\n    Step(vst, vst.stepsPending)\n    let stepsThisFrame = Math.floor(vst.stepsPending)\n    vst.stepsPending -= stepsThisFrame\n  },\n  [fitToBounds]: (st) => {\n    FitToBounds(ViewerState(st))\n  },\n  [pan]: (st, {payload: movement}) => {\n    let vst = ViewerState(st)\n    vst.center = Add(movement, vst.center)\n  },\n  [setScale]: (st, {payload: scale}) => {ViewerState(st).scale = scale},\n  [setLife]: (st, {payload: {rle}}) => {\n    let vst = ViewerState(st)\n    try {\n      vst.life = L.FromLiving(FromRle(rle))\n      vst.playing = false\n      vst.suspended = false\n      vst.editHistory = []\n      vst.showingSpeedControls = false\n      if (vst.canvasContainer) {\n        FitToBounds(vst)\n      }\n      st.showingDrawer = false\n    } catch (e) {console.error(e)}\n  },\n  [speedDown]: (st) => {ViewerState(st).stepsPerFrame /= Math.PI/2},\n  [speedUp]:   (st) => {ViewerState(st).stepsPerFrame *= Math.PI/2},\n  [stepOnce]: (st) => {\n    let vst = ViewerState(st)\n    FlushEditHistory(vst)\n    Step(vst, 1)\n    vst.showingSpeedControls = false\n  },\n  [toggleCell]: (st, {payload: {x, y}}) => {\n    let vst = ViewerState(st)\n      , cellLocation = [x, y].map(Math.floor)\n    vst.editHistory.push(cellLocation)\n    vst.showingSpeedControls = false\n  },\n  [togglePlaying]: (st) => {\n    let vst = ViewerState(st)\n    vst.playing = !vst.playing\n    FlushEditHistory(vst)\n    vst.showingSpeedControls = false\n  },\n  [toggleShowingDrawer]: (st) => {\n    st.showingDrawer = !st.showingDrawer\n    let vst = ViewerState(st)\n    vst.suspended = st.showingDrawer\n    vst.showingSpeedControls = false\n  },\n  [toggleShowingSpeedControls]: (st) => {\n    let vst = ViewerState(st)\n    vst.showingSpeedControls = !vst.showingSpeedControls\n  },\n  [updateCanvasContainer]: (st, {payload: canvasContainer}) => {\n    let vst = ViewerState(st)\n    vst.canvasContainer = canvasContainer\n    if (canvasContainer && !vst.scale) {\n      FitToBounds(vst)\n      if (!vst.scale)\n        DefaultBounds(vst)\n    }\n  },\n  [zoom]: (st, {payload: {fixedPoint, scaleFactor}}) => {\n    let vst = ViewerState(st)\n    let centerToFixed = Subtract(fixedPoint, vst.center)\n      , movement = Mult(1 - 1/scaleFactor, centerToFixed)\n    vst.center = Add(vst.center, movement)\n    vst.scale *= scaleFactor\n  },\n})\n\nfunction Step(vst, count) {\n  vst.center = Add(vst.center, Mult(count, vst.translationPerStep))\n  for (count = Math.floor(count); count > 0; count--) {\n    vst.life = L.Next(vst.life, {canFree: true})\n  }\n}\n\nfunction FitToBounds(vst) {\n  let clientBounds = vst.canvasContainer.getBoundingClientRect()\n  let lifeBounds = L.BoundingRect(vst.life)\n  if (!lifeBounds && Edits(vst).length === 0) return\n  let {left = Infinity, right = -Infinity, top = Infinity, bottom = -Infinity} = lifeBounds || {}\n  for (var [[x, y]] of Edits(vst)) {\n    left = Math.min(left, x)\n    right = Math.max(right, x + 1)\n    top = Math.min(top, y)\n    bottom = Math.max(bottom, y + 1)\n  }\n  let width  = Math.max((right - left) * 1.2, 10)\n  let height = Math.max((bottom - top) * 1.2, 10)\n  let scaleX = clientBounds.width  / width\n  let scaleY = clientBounds.height / height\n  vst.center = {x: (left + right) / 2, y: (top + bottom) / 2}\n  vst.scale = Math.min(scaleX, scaleY)\n}\n\nfunction DefaultBounds(vst) {\n  let clientBounds = vst.canvasContainer.getBoundingClientRect()\n  let width  = 10\n  let height = 10\n  let scaleX = clientBounds.width  / width\n  let scaleY = clientBounds.height / height\n  vst.center = {x: 0, y: 0}\n  vst.scale = Math.min(scaleX, scaleY)\n}\n\nexport let Edits = createSelector(\n  [vst => vst.life, vst => vst.editHistory],\n  (life, editHistory) => {\n    let toggleCounts = new Map()\n    for (var location of editHistory) {\n      let str = location.join()\n      let toggleCount = toggleCounts.get(str) || 0\n      toggleCounts.set(str, toggleCount + 1)\n    }\n    let updates = []\n    for (var [locationStr, toggleCount] of toggleCounts)\n      if (toggleCount % 2 === 1) {\n        let location = locationStr.split(',').map(n => parseInt(n))\n        let currentState = L.Has(life, location)\n        updates.push([location, !currentState])\n      }\n    return updates\n  })\n\nfunction FlushEditHistory(vst) {\n  if (vst.editHistory.length > 0) {\n    vst.life = L.SetMany(vst.life, Edits(vst), {canFree: true})\n    vst.editHistory = []\n  }\n}\n\nlet actionSanitizer = action =>\n    action.type === setLife.toString()               ? {...action, payload: '<<LOCATIONS_ARRAY>>'}\n  : action.type === updateCanvasContainer.toString() ? {...action, payload: '<<CANVAS_CONTAINER>>'}\n  : action\nlet stateSanitizer = ({viewerState, ...rest}) => {\n    let {life, canvasContainer, ...viewerStateRest} = viewerState\n    return {\n      viewerState: {\n        life: life && `<<LIFE-${life.hash}>>`,\n        canvasContainer: canvasContainer && '<<CANVAS_CONTAINER>>',\n        ...viewerStateRest\n      },\n      ...rest\n    }\n  }\n\nexport let store = configureStore({\n  reducer,\n  middleware: [thunk],\n  devTools: {actionSanitizer, stateSanitizer}\n})","export function FromPlaintext(str) {\n  let lines = [...str.match(/^[.O]+/mg)]\n    .map((line, y) =>\n      line\n        .split(\"\")\n        .map((char, index) => char === \"O\" && [index, y])\n        .filter(Boolean))\n  return [].concat(...lines)\n}\n\nexport function FromRle(str) {\n  let bodyMatch = str.match(/[ob\\d$\\r\\n]+!/)\n  if (!bodyMatch) throw Error(\"RLE body not found in string: \" + str)\n  let lines = bodyMatch[0].replace(/[\\r\\n]/, '').split(\"$\")\n  let livePairs = []\n  let y = 0\n  lines.forEach(line => {\n    let runs = line.match(/\\d*[bo]/g)\n      , x = 0\n    for (var run of runs) {\n      let count = parseInt(run) || 1\n      if (run.includes(\"o\")) {\n        for (let i = 0; i < count; i++) {\n          livePairs.push([x, y])\n          x++\n        }\n      } else x += count\n    }\n    let trailing = parseInt(line.match(/\\d*$/)[0]) || 1\n    y += trailing\n  })\n  return livePairs\n}","import React, {useMemo, useCallback} from 'react'\nimport \"../../styles/fill.css\"\n\n// A canvas with fixed dimensions and a `onFrame` function that will be called on each animation frame with the canvas's imageData and the frame's timestamp\nexport default function AnimatedCanvas(props) {\n  let {onFrame} = props\n    , pendingRequest = null\n    , canvas = useMemo(() => document.createElement('canvas'), [])\n    , context = useMemo(() => canvas.getContext('2d'), [canvas])\n    , imageData = null\n    , currentLogicalWidth = null\n    , currentLogicalHeight = null\n    , currentDevicePixelRatio = window.devicePixelRatio || 1\n    , withContainer = useCallback(_withContainer, [])\n    , makeRequest   = useCallback(_makeRequest, [])\n    , cancelRequest = useCallback(_cancelRequest, [])\n    , animate       = useCallback(_animate, [])\n  canvas.style.width = '100%'\n  canvas.style.height = '100%'\n  \n  return <div ref={useCallback(withContainer, [])} className=\"fill\"></div>\n\n  function _withContainer(container) {\n    if (!container) { cancelRequest(); return }\n    container.appendChild(canvas)\n    makeRequest()\n  }\n  function _makeRequest() {\n    pendingRequest = window.requestAnimationFrame(animate)\n  }\n  function _cancelRequest() {\n    pendingRequest && window.cancelAnimationFrame(pendingRequest)\n  }\n  function _animate(timestamp) {\n    makeRequest(animate)\n    let rect = canvas.getBoundingClientRect()\n    if (\n      currentLogicalWidth !== rect.width\n      || currentLogicalHeight !== rect.height\n      || currentDevicePixelRatio !== (window.devicePixelRatio || 1)\n      ) {\n      currentLogicalWidth  = rect.width\n      currentLogicalHeight = rect.height\n      currentDevicePixelRatio = window.devicePixelRatio || 1\n      let pixelWidth  = currentLogicalWidth  * currentDevicePixelRatio\n        , pixelHeight = currentLogicalHeight * currentDevicePixelRatio\n      canvas.width  = pixelWidth\n      canvas.height = pixelHeight\n      imageData =\n        pixelWidth !== 0 && pixelHeight !== 0\n          ? context.createImageData(pixelWidth, pixelHeight)\n          : null\n    }\n    onFrame({\n      canvas,\n      context,\n      imageData,\n      timestamp\n    })\n  }\n}","export function ImageXYToOffset(x, y, imageData) {\n  return x + y * imageData.width\n}\nexport function GridToImageX(x, viewport) {\n  return (x - viewport.left) * viewport.scale * (window.devicePixelRatio || 1)\n}\nexport function GridToImageY(y, viewport) {\n  return (y - viewport.top ) * viewport.scale * (window.devicePixelRatio || 1)\n}\nexport function GridToImageCell(location, viewport) {\n  let [x, y] = location\n  let topleft     = {x: GridToImageX(x    , viewport), y: GridToImageY(y    , viewport)}\n  let bottomright = {x: GridToImageX(x + 1, viewport), y: GridToImageY(y + 1, viewport)}\n  return {topleft, bottomright}\n}","import {GridToImageX, GridToImageY} from \"./coordinates\"\n\nexport default function RenderGridLines({colors, context: ctx, viewport: v}) {\n  ctx.save()\n  // Clear canvas\n  ctx.fillStyle = `rgba(${colors.dead.join()})`\n  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n  // Abort if `scale` is too small for grid lines\n  if (v.scale < MIN_SCALE) return ctx.restore()\n  // Vertical grid lines\n  ctx.fillStyle = GridLinesColor(v.scale, colors)\n  for (let xGrid = ceil(v.left); xGrid < v.right; xGrid++) {\n    let xImage = GridToImageX(xGrid, v) | 0\n    ctx.fillRect(xImage, 0, 1, ctx.canvas.height)\n  }\n  // Horizontal grid lines\n  for (let yGrid = ceil(v.top); yGrid < v.bottom; yGrid++) {\n    let yImage = GridToImageY(yGrid, v) | 0\n    ctx.fillRect(0, yImage, ctx.canvas.width, 1)\n  }\n  ctx.restore()\n}\n\nlet MIN_SCALE = 5\nlet FADE_EXPONENT = 0.15\n\n// Grid lines fade into the background color as `scale` decreases\nfunction GridLinesColor(scale, colors) {\n  let {lines, dead} = colors\n  let fade = pow(MIN_SCALE / scale, FADE_EXPONENT)\n  let [r, g, b] = [...Array(3)].map((_, i) => (1 - fade) * lines[i] + fade * dead[i])\n  return `rgba(${r},${g},${b},255)`\n}\n\nlet {ceil, pow} = Math","import {GridToImageX, GridToImageY} from \"./coordinates\"\n\nexport default function RenderEdits({colors, context: ctx, edits, viewport}) {\n  let edited = `rgba(${colors.toggledOn.join()})`\n  let background = `rgba(${colors.dead.join()})`\n  ctx.save()\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n  for (var [[xGrid, yGrid], alive] of edits) {\n    let xImageLo = GridToImageX(xGrid,     viewport) | 0\n    let xImageHi = GridToImageX(xGrid + 1, viewport) | 0\n    let yImageLo = GridToImageY(yGrid,     viewport) | 0\n    let yImageHi = GridToImageY(yGrid + 1, viewport) | 0\n    let width  = xImageHi - xImageLo\n    let height = yImageHi - yImageLo\n    let b = 2\n    ctx.fillStyle = edited\n    ctx.fillRect(xImageLo - b/2, yImageLo - b/2, width + b, height + b)\n    if (!alive) {\n      ctx.fillStyle = background\n      ctx.fillRect(xImageLo + b/2, yImageLo + b/2, width - b, height - b)\n    }\n  }\n  ctx.restore()\n}","import React, {useRef, useEffect, useCallback, useMemo} from 'react'\nimport {createSelectorCreator, defaultMemoize} from 'reselect'\nimport AnimatedCanvas from \"../AnimatedCanvas\"\nimport \"../../styles/fill.css\"\nimport \"./index.css\"\nimport * as L from 'lowlife'\nimport RenderBackground from \"./render-grid-lines\"\nimport RenderEdits from \"./render-edits\"\nimport {Edits, Editing, Running} from \"../../redux\"\nimport {Distance, Midpoint, Subtract} from \"../../matrix\"\n\nexport default function InteractiveViewer(props) {\n  let {colors, dragContainer, editing, getState, mutators: m} = props\n  let lifeRenderColors = useMemo(() => ({alive: colors.alive, dead: [0,0,0,0]}), [colors.alive])\n  let canvasContainerRef = useRef(null)\n  let dragContainerRef = useRef(dragContainer || null)\n  let lastTouchesRef = useRef([])\n  let mouseDownRef = useRef(null)\n  let mouseHandlers = {\n    mousemove: useCallback(HandleMouseMove, []),\n    mouseup: useCallback(HandleMouseUp, []),\n    mouseleave: useCallback(CleanupMouseDown, [])\n  }\n  let Viewport = useMemo(() => defaultMemoize(_Viewport), [])\n  let CurrentViewport = useCallback(_CurrentViewport, [])\n  let MemoizedRenderBackground = useMemo(() => MemoizeRenderBackground(RenderBackground), [])\n  let HandleBackgroundFrame    = useCallback(_HandleBackgroundFrame, [MemoizedRenderBackground])\n  let RenderCells              = useCallback(_RenderCells, [lifeRenderColors])\n  let MemoizedRenderCells      = useMemo(() => MemoizeRenderCells(RenderCells), [RenderCells])\n  let HandleCellsFrame         = useCallback(_HandleCellsFrame, [])\n  let MemoizedRenderEdits      = useMemo(() => MemoizeRenderEdits(RenderEdits), [])\n  let HandleEditsFrame         = useCallback(_HandleEditsFrame, [])\n\n  // Add/remove mouse handlers on drag container\n  useEffect(() => {\n    if (dragContainer) UpdateDragContainerRef(dragContainer)\n    return () => {if (dragContainer) UpdateDragContainerRef(null)}\n  })\n        \n  return (\n    <div className={editing ? \"fill viewer editing\" : \"fill viewer\"}>\n      <div\n        className={\"fill\"}\n        onMouseDown={useCallback(HandleMouseDown, [])}\n        onWheel={useCallback(HandleWheel, [])}\n        ref={useCallback(UpdateCanvasContainerRef, [])}\n      >\n        <AnimatedCanvas onFrame={HandleBackgroundFrame} />\n        <AnimatedCanvas onFrame={HandleCellsFrame} />\n        <AnimatedCanvas onFrame={HandleEditsFrame} />\n      </div>\n    </div>\n  )\n  \n  function _HandleBackgroundFrame(opts) {\n    opts.viewport = CurrentViewport()\n    opts.colors = colors\n    MemoizedRenderBackground(opts)\n  }\n\n  function _RenderCells(opts) {\n    if (opts.imageData) {\n      L.Render(opts.life, {...opts, colors: lifeRenderColors})\n      opts.context.putImageData(opts.imageData, 0, 0)\n    }\n  }\n\n  function _HandleCellsFrame(opts) {\n    let vst = getState()\n    let {life, scale} = vst\n    if (!scale) return\n    opts.life = life\n    opts.viewport = CurrentViewport()\n    MemoizedRenderCells(opts)\n    if (Running(vst)) m.advanceOneFrame()\n  }\n\n  function _HandleEditsFrame(opts) {\n    let viewerState = getState()\n    opts.colors = colors\n    opts.edits = Edits(viewerState)\n    opts.viewport = CurrentViewport()\n    MemoizedRenderEdits(opts)\n  }\n\n  function UpdateCanvasContainerRef(canvasContainer) {\n    m.updateCanvasContainer(canvasContainer)\n    let {current} = canvasContainerRef\n    // Something about the way React does events required this manual handling to get pinch/zoom to work on mobile Safari\n    // This should be revisited later\n    if (current && canvasContainer !== current) {\n      // Remove handlers on unmount\n      let Remove = current.removeEventListener.bind(current)\n      Remove(\"touchstart\",  HandleTouch) \n      Remove(\"touchend\",    HandleTouch)\n      Remove(\"touchcancel\", HandleTouch)\n      Remove(\"touchmove\",   HandleTouch)\n      canvasContainerRef.current = null\n    }\n    if (canvasContainer) {\n      // Add handlers on mount\n      let Add = canvasContainer.addEventListener.bind(canvasContainer)\n      Add(\"touchstart\",  HandleTouch) \n      Add(\"touchend\",    HandleTouch)\n      Add(\"touchcancel\", HandleTouch)\n      Add(\"touchmove\",   HandleTouch)\n      canvasContainerRef.current = canvasContainer\n    }\n    if (!dragContainerRef.current) UpdateDragContainerRef(canvasContainer)\n  }\n\n  function UpdateDragContainerRef(dragContainer) {\n    let {current} = dragContainerRef\n    if (current && dragContainer !== current) {\n      let Remove = current.removeEventListener.bind(current)\n      Remove(\"keyup\", HandleKey)\n      dragContainerRef.current = null\n    }\n    if (dragContainer) {\n      let Add = dragContainer.addEventListener.bind(dragContainer)\n      Add(\"keyup\", HandleKey)\n      dragContainerRef.current = dragContainer\n    }\n  }\n\n  function HandleKey(event) {\n    if (event.key === ' ') m.togglePlaying()\n  }\n\n  // TODO debouncing\n  function HandleWheel(event) {\n    let scaleFactor = ScaleFactor(event.deltaY || 0)\n      , client = {x: event.clientX, y: event.clientY}\n      , fixedPoint = GridCoordinates(client)\n    m.zoom({scaleFactor, fixedPoint})\n\n    function ScaleFactor(deltaY) {\n      let c = 2\n      return Math.pow(2, -deltaY / Math.sqrt(1 + c * deltaY * deltaY))\n    }\n  }\n\n  function HandleTouch(event) {\n    event.preventDefault()\n    let eventTouches = EventTouches(event)\n      , lastTouches = lastTouchesRef.current\n      , newAndUpdatedTouches = UpdateTrackedTouches(eventTouches, lastTouches)\n      , touchCount = newAndUpdatedTouches.length\n      , [t1, t2] = newAndUpdatedTouches\n      , isTap = IsTap()\n      , isDrag = IsDrag()\n      , isPinch = touchCount === 2\n    if (isDrag || isPinch)\n      for (var t of newAndUpdatedTouches)\n        t.noTap = true\n    if (isTap)\n      HandleTap(lastTouches[0])\n    else if (isDrag) \n      HandleDrag(t1)\n    else if (isPinch)\n      HandlePinch(t1, t2)\n    lastTouchesRef.current = newAndUpdatedTouches\n\n    function IsTap() {\n      let lastTouchCount = lastTouches.length\n      return (\n        touchCount === 0\n        && lastTouchCount === 1\n        && !lastTouches[0].noTap\n      )\n    }\n\n    function IsDrag() {\n      if (touchCount !== 1) return false\n      let clientMovement = Distance(t1.client, t1.initial.client)\n        , dragThreshold = 3\n      return clientMovement > dragThreshold\n    }\n  }\n\n  function EventTouches(event) {\n    var eventTouches = []\n    for (let i = 0; i < event.touches.length; i++) {\n      let t = event.touches.item(i)\n        , client = {x: t.clientX, y: t.clientY}\n        , grid = GridCoordinates(client)\n      eventTouches.push({identifier: t.identifier, timeStamp: event.timeStamp, client, grid})\n    }\n    return eventTouches\n  }\n\n  function UpdateTrackedTouches(eventTouches, trackedTouches) {\n    let OldVersion = eventTouch => trackedTouches.find(trackedTouch => trackedTouch.identifier === eventTouch.identifier)\n      , newAndUpdatedTouches = eventTouches.map(eventTouch => {\n          let oldVersion = OldVersion(eventTouch)\n            , initial = oldVersion ? oldVersion.initial : eventTouch\n            , noTap   = oldVersion ? oldVersion.noTap   : false\n          return {...eventTouch, initial, noTap}\n        })\n    return newAndUpdatedTouches.slice(0, 2)\n  }\n  \n  function HandleTap(touch) {\n    if (Editing(getState()))\n      m.toggleCell(touch.grid)\n  }\n\n  function HandleDrag(touch) {\n    let movement = Subtract(touch.initial.grid, touch.grid)\n    m.pan(movement)\n  }\n\n  function HandlePinch(touch1, touch2) {\n    let currentTouchCenter = Midpoint(touch1.grid, touch2.grid)\n      , initialTouchCenter = Midpoint(touch1.initial.grid, touch2.initial.grid)\n      , movement = Subtract(initialTouchCenter, currentTouchCenter)\n      , currentClientDistance = Distance(touch1.client, touch2.client)\n      , initialGridDistance = Distance(touch1.initial.grid, touch2.initial.grid)\n    m.setScale(currentClientDistance / initialGridDistance)\n    m.pan(movement)\n  }\n\n  function HandleMouseDown(event) {\n    let {clientX, clientY, timeStamp} = event\n      , client = {x: clientX, y: clientY}\n    mouseDownRef.current = {\n      client,\n      grid: GridCoordinates(client),\n      hasDragged: false,\n      timeStamp\n    }\n    if (dragContainer) for (var key in mouseHandlers)\n      dragContainer.addEventListener(key, mouseHandlers[key])\n  }\n\n  function CleanupMouseDown() {\n    mouseDownRef.current = null\n    if (dragContainer) for (var key in mouseHandlers)\n      dragContainer.removeEventListener(key, mouseHandlers[key])\n  }\n\n  function HandleMouseMove(event) {\n    let mouseDown = mouseDownRef.current\n    if (!mouseDown) return\n    let client = {x: event.clientX, y: event.clientY}\n      , clientMovement = Distance(client, mouseDown.client)\n      , dragThreshold = 3\n    if (clientMovement < dragThreshold) return\n    mouseDownRef.current.hasDragged = true\n    let grid = GridCoordinates(client)\n      , gridMovement = Subtract(mouseDown.grid, grid)\n    m.pan(gridMovement)\n  }\n\n  function HandleMouseUp(event) {\n    if (!mouseDownRef.current) return\n    if (!mouseDownRef.current.hasDragged) HandleClick(event)\n    CleanupMouseDown()\n  }\n\n  function HandleClick(event) {\n    if (Editing(getState())) {\n      let client = {x: event.clientX, y: event.clientY}\n        , grid = GridCoordinates(client)\n      m.toggleCell(grid)\n    }\n  }\n\n  function GridCoordinates({x: clientX, y: clientY}) {\n    let {v0, v1} = CurrentViewport()\n      , viewportWidth  = v1.x - v0.x\n      , viewportHeight = v1.y - v0.y\n      , bounds = canvasContainerRef.current.getBoundingClientRect()\n      , pixelsFromLeft = clientX - bounds.left\n      , pixelsFromTop  = clientY - bounds.top\n      , horizontalScale = viewportWidth  / bounds.width\n      , verticalScale   = viewportHeight / bounds.height\n      , gridX = pixelsFromLeft * horizontalScale + v0.x\n      , gridY = pixelsFromTop  * verticalScale   + v0.y\n    return {x: gridX, y: gridY}\n  }\n\n\n  function _CurrentViewport() {\n    let {center, scale} = getState()\n    let {width, height} = canvasContainerRef.current.getBoundingClientRect()\n    return Viewport(center.x, center.y, scale, width, height)\n  }\n}\n\nfunction _Viewport(centerX, centerY, scale, clientWidth, clientHeight) {\n  let width  = clientWidth  / scale\n    , height = clientHeight / scale\n    , left   = centerX - width  / 2\n    , right  = centerX + width  / 2\n    , top    = centerY - height / 2\n    , bottom = centerY + height / 2\n    , center = {x: centerX, y: centerY}\n    , v0 = {x: left,  y: top}\n    , v1 = {x: right, y: bottom}\n  return {v0, v1, topleft: v0, bottomright: v0, left, right, top, bottom, center, width, height, scale}\n}\n\nfunction MemoizeWith(Equal) {\n  let Memoizer = createSelectorCreator(defaultMemoize, Equal)\n  return Fn => Memoizer(Identity, Fn)\n}\nlet Identity = x => x\n\nlet MemoizeRenderBackground = MemoizeWith((prev, next) =>\n  prev.viewport === next.viewport\n  && prev.context === next.context\n  && prev.colors  === next.colors\n)\nlet MemoizeRenderCells = MemoizeWith((prev, next) =>\n  prev.viewport  === next.viewport\n  && prev.context   === next.context\n  && prev.imageData === next.imageData\n  && prev.life      === next.life\n  && prev.colors    === next.colors\n)\nlet MemoizeRenderEdits = MemoizeWith((prev, next) =>\n  prev.viewport  === next.viewport\n  && prev.context   === next.context\n  && prev.edits     === next.edits\n  && prev.editing   === next.editing\n  && prev.colors    === next.colors\n)","import React from 'react'\n\nexport default function StepForward(props) {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      {...props}\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8z\n        M 11.7 17.7\n        v -4.4\n        l -1.3 .4\n        v -.9\n        l 2.4 -.8\n        v 5.7\n        z\"\n      />\n    </svg>\n  )\n}","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport {Running, ViewerState} from \"../../redux\"\nimport {MdGpsFixed, MdPause, MdPlayArrow, MdSlowMotionVideo, MdAdd, MdRemove, MdMenu} from 'react-icons/md'\nimport StepForward from \"../icons/StepForward\"\n\nexport default function Controls(props) {\n  let {size, colors, mutators: m} = props\n    , running = useSelector(st => Running(ViewerState(st)))\n    , showingSpeedControls = useSelector(st => ViewerState(st).showingSpeedControls)\n    , ems = parseInt(size)\n    , mainStyle = MainStyle(ems, colors)\n    , iconProps = {\n        size, // for react-icons\n        width: size,\n        height: size\n      }\n    , PlayPause = running ? MdPause : MdPlayArrow\n    , Spacer = () => <div style={{width: (ems / 3) + 'em'}}></div>\n    , speedControls = showingSpeedControls &&\n        <div style={{...mainStyle, display: 'flex', flexDirection: 'column', position: 'absolute', bottom: '2.3em'}}>\n          <MdAdd\n            onClick={() => m.speedUp()}\n            {...iconProps}\n          />\n          <MdRemove\n            onClick={() => m.speedDown()}\n            {...iconProps}\n          />\n        </div>\n      \n  return (\n    <div style={{...mainStyle, display: 'flex'}} >\n      <PlayPause onClick={() => m.togglePlaying()} {...iconProps} />\n      <Spacer />\n      <StepForward onClick={() => m.stepOnce()} {...iconProps} />\n      <Spacer />\n      <div>\n        <div style={{width: size, height: size, position: 'relative'}}>\n          <MdSlowMotionVideo\n            onClick={() => m.toggleShowingSpeedControls()}\n            {...iconProps}\n          />\n          {speedControls}\n        </div>\n      </div>\n      <Spacer />\n      <MdGpsFixed onClick={() => m.fitToBounds()} />\n      <Spacer />\n      <MdMenu onClick={() => m.toggleShowingDrawer()} {...iconProps} />\n    </div>\n  )\n}\n\nlet MainStyle = (size, colors) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: colors.controlsBackground,\n  padding: size / 20 + 'em',\n  borderRadius: size / 4 + 'em',\n  color: colors.controlsForeground\n})","import React, {useMemo} from 'react'\nimport {CSSTransition} from 'react-transition-group'\nimport Patterns from \"../../patterns.json\"\nimport \"./index.css\"\nimport \"../../styles/fill.css\"\n\nfunction Menu(props) {\n  let {colors, mutators: m, showingDrawer} = props\n  let patternListStyle = useMemo(() => ({backgroundColor: colors.controlsBackground}), [colors])\n  let patternButtonStyle = useMemo(() => ({\n    color: colors.controlsBackground,\n    backgroundColor: colors.controlsForeground\n  }), [colors])\n\n  return (\n    <CSSTransition in={showingDrawer} timeout={200} classNames=\"menu\">\n      <div className={'menu'}>\n        <div\n          className='fill'\n          onClick={() => m.toggleShowingDrawer()}\n        />\n        <ul\n          className='pattern-list'\n          style={patternListStyle}\n        >{\n          Patterns.map(PatternButton)\n        }</ul>\n      </div>\n    </CSSTransition>\n  )\n\n  function PatternButton(pattern) {\n    let [name, filename] = pattern\n    return (\n      <li key={filename}>\n        <button\n          onClick={SetPattern}\n          key={filename}\n          style={patternButtonStyle}\n        >\n          {name}\n        </button>\n      </li>\n    )\n\n    async function SetPattern() {\n      try {\n        let utf8Decoder = new TextDecoder(\"utf-8\");\n        let res = await fetch(\"patterns/\" + filename)\n        let reader = res.body.getReader()\n        var rle = \"\"\n        while (true) {\n          let {value, done} = await reader.read()\n          rle += utf8Decoder.decode(value)\n          if (done) break\n        }\n        rle = rle.replace(/\\r?\\n|\\r/, '\\n')\n        m.setLife({rle})\n      } catch (e) {console.log(e)}\n    }\n  }\n}\n\nexport default Menu","import React, {useCallback, useMemo} from 'react'\nimport {useSelector, useDispatch, useStore} from 'react-redux'\nimport {Editing, setLife, toggleShowingDrawer, ViewerState, advanceOneFrame, fitToBounds, initializeBounds, pan, setScale, speedDown, speedUp, stepOnce, toggleCell, togglePlaying, toggleShowingSpeedControls, updateCanvasContainer, zoom} from './redux'\nimport InteractiveViewer from \"./components/InteractiveViewer\"\nimport ViewerControls from \"./components/ViewerControls\"\nimport Menu from \"./components/Menu\"\nimport FPS from \"./components/FPS\"\n\nlet colors = {\n  alive: [20, 255, 20, 255],\n  dead: [20, 20, 20, 255],\n  lines: [192, 192, 192, 255],\n  toggledOff: [192, 20, 96, 255],\n  toggledOn: [255, 128, 20, 255],\n  border: [255, 128, 20, 255],\n  controlsBackground:  '#424242',\n  controlsForeground: 'white',\n  controlsHighlight: 'red'\n}\ncolors.background = `rgba(${colors.dead.join()})`\nlet viewerActionCreators = {advanceOneFrame, fitToBounds, initializeBounds, pan, setLife, setScale, speedDown, speedUp, stepOnce, toggleCell, togglePlaying, toggleShowingDrawer, toggleShowingSpeedControls, updateCanvasContainer, zoom}\n\nfunction App() {\n  let dispatch = useDispatch()\n    , showingDrawer = useSelector(st => st.showingDrawer)\n    , editing = useSelector(st => Editing(ViewerState(st)))\n    , store = useStore()\n    , mutators = useMemo(\n        () => mapObj(actionCreator => payload => dispatch(actionCreator(payload)), viewerActionCreators),\n        [dispatch]\n      )\n  return (\n    <div style={{position: 'absolute', left: 0, right: 0, top: 0, bottom: 0, backgroundColor: colors.background}}>\n      {fps}\n      <InteractiveViewer\n        dragContainer={window}\n        getState={useCallback(() => ViewerState(store.getState()), [store])}\n        {...{editing, colors, mutators}}\n      />\n      <Controls />\n      <Menu {...{colors, mutators, showingDrawer}} />\n    </div>\n  );\n\n  function Controls() {\n    return (\n      <div\n        style={{\n          position: 'absolute',\n          width: '100%',\n          bottom: '10%',\n          display: 'flex',\n          justifyContent: 'center',\n          pointerEvents: 'none'\n        }}\n      >\n        <div style={{pointerEvents: 'auto'}}>\n          <ViewerControls\n            size=\"2em\"\n            {...{colors, mutators}}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nlet fps =\n  <div style={{\n    position: 'fixed',\n    right: 0,\n    zIndex: 1,\n    color: 'black',\n    textShadow: contrastShadow(0.05, 'white')\n  }}>\n    <FPS />\n  </div>\n\nfunction contrastShadow(size, color) {\n  let strs = []\n  for (let i = -1; i <= 1; i++)\n    for (let j = -1; j <= 1; j++)\n      strs.push(`${i * size}em ${j * size}em ${color}`)\n  return strs.join(\",\")\n}\n\nfunction mapObj(fn, obj) {\n  let mapped = {}\n  for (var key in obj) {\n    mapped[key] = fn(obj[key], key, obj)\n  }\n  return mapped\n}\n\nexport default App;","import React, {useState, useEffect} from 'react'\n\nexport default function FPS() {\n  let [fps, setFps] = useState(null)\n  useEffect(() => {\n    let pendingRequest = null\n      , lastTimestamp = null\n      , lastFpsTimestamp = -Infinity\n    requestTimestamp()\n    return () => window.cancelAnimationFrame(pendingRequest)\n\n    function requestTimestamp() {\n      pendingRequest = window.requestAnimationFrame(updateTimestamp)\n    }\n    function updateTimestamp(now) {\n      requestTimestamp()\n      if (lastTimestamp && (now - lastFpsTimestamp > 1000)) {\n        let delta = now - lastTimestamp\n        setFps(1000 / delta | 0)\n        lastFpsTimestamp = now\n      }\n      lastTimestamp = now\n    }\n  })\n  return <span style={fps ? {} : {visibility: \"hidden\"}}>{\"\" + fps}</span>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {store} from './redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var _regeneratorRuntime = require(\"/Users/brendan/dev/life/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"/Users/brendan/dev/life/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"/Users/brendan/dev/life/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"/Users/brendan/dev/life/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.Life = {}));\n})(this, function (exports) {\n  'use strict';\n\n  var _marked =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(Living),\n      _marked2 =\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(Living$2);\n\n  var asPairs = function asPairs(fn) {\n    return function (obj) {\n      return Object.fromEntries(fn(Object.entries(obj)));\n    };\n  };\n\n  function checkIterable(x) {\n    if (!isIterable(x)) throw TypeError(\"Expected iterable: \" + x);\n    return true;\n  }\n\n  var filter = function filter(fn) {\n    return function (obj) {\n      var filterPair = function filterPair(_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            val = _ref2[1];\n\n        return fn(val, key, obj);\n      };\n\n      return asPairs(function (pairs) {\n        return pairs.filter(filterPair);\n      })(obj);\n    };\n  };\n\n  var isIterable = function isIterable(x) {\n    return x && typeof x[Symbol.iterator] === 'function';\n  };\n\n  var compose = function compose(f) {\n    return function (g) {\n      return function () {\n        return f(g.apply(void 0, arguments));\n      };\n    };\n  };\n\n  var partialOpts = function partialOpts(fn) {\n    return function (optsNow) {\n      return function (optsLater) {\n        return fn(_objectSpread({}, optsNow, {}, optsLater));\n      };\n    };\n  };\n\n  var map = function map(xf) {\n    return function map(xs) {\n      var result = empty(xs);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = entries(xs)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _ref5 = _step.value;\n\n          var _ref4 = _slicedToArray(_ref5, 2);\n\n          var key = _ref4[0];\n          var value = _ref4[1];\n          result[key] = xf(value, key, xs);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return result;\n    };\n  };\n\n  var mapKeys = function mapKeys(xf) {\n    return function mapKeys(xs) {\n      var result = empty(xs);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = entries(xs)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _ref8 = _step2.value;\n\n          var _ref7 = _slicedToArray(_ref8, 2);\n\n          var key = _ref7[0];\n          var value = _ref7[1];\n          result[xf(key, value, xs)] = value;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return result;\n    };\n  };\n\n  var pick = function pick(keys) {\n    return checkIterable(keys) && filter(function (_, key) {\n      return keys.includes(key);\n    });\n  }; // Number of set bits in a U32. See \"Hacker's Delight\" chapter 5\n\n\n  function population(x) {\n    x = (x & 0x55555555) + (x >>> 1 & 0x55555555);\n    x = (x & 0x33333333) + (x >>> 2 & 0x33333333);\n    x = (x & 0x0F0F0F0F) + (x >>> 4 & 0x0F0F0F0F);\n    x = (x & 0x00FF00FF) + (x >>> 8 & 0x00FF00FF);\n    x = (x & 0x0000FFFF) + (x >>> 16 & 0x0000FFFF);\n    return x | 0;\n  }\n\n  function setName(fn, name) {\n    Object.defineProperty(fn, 'name', {\n      value: name\n    });\n    return fn;\n  }\n\n  var stripLeft = function stripLeft(prefix) {\n    return mapKeys(function (name) {\n      if (prefix !== name.substring(0, prefix.length)) throw Error(\"Expected prefix '\".concat(prefix, \"': \").concat(name));\n      return name.substring(prefix.length);\n    });\n  };\n\n  var isArray = Array.isArray;\n\n  var empty = function empty(obj) {\n    return isArray(obj) ? [] : {};\n  };\n\n  var collectionMethod = function collectionMethod(name) {\n    return function (x) {\n      return isArray(x) ? _toConsumableArray(x[name]()) : Object[name](x);\n    };\n  };\n\n  var entries = collectionMethod('entries');\n  var N = 0;\n  var S = 1;\n  var W = 2;\n  var E = 3;\n  var NW = 0;\n  var NE = 1;\n  var SW = 2;\n  var SE = 3;\n  var SIDES = [N, S, W, E];\n\n  var Var = function Var() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"<anonymous dynamic variable>\";\n\n    var stack = null,\n        Get = function Get() {\n      if (stack) return stack[0];\n      throw Error(\"Unexpected empty context for dynamic variable: \" + name);\n    };\n\n    Get.get = Get;\n\n    Get.let = function (value, fn) {\n      stack = [value, stack];\n\n      try {\n        return fn();\n      } finally {\n        stack = stack[1];\n      }\n    };\n\n    Get.bindTo = function (fn) {\n      var current = stack;\n      return function () {\n        var tmp = stack;\n        stack = current;\n\n        try {\n          return fn.apply(void 0, arguments);\n        } finally {\n          stack = tmp;\n        }\n      };\n    };\n\n    Object.defineProperty(Get, 'name', {\n      value: name\n    });\n    return Get;\n  };\n\n  var Canon = {\n    Branch: Var('Canon/Branch'),\n    Edge: Var('Canon/Edge'),\n    Leaf: Var('Canon/Leaf'),\n    Neighborhood: Var('Canon/Neighborhood')\n  };\n  var Allocate = {\n    Branch: Var('Allocate/Branch'),\n    Edge: Var('Allocate/Edge'),\n    Leaf: Var('Allocate/Leaf'),\n    Neighborhood: Var('Allocate/Neighborhood')\n  };\n  var CopyMemoTable = Var('CopyMemoTable');\n\n  function MakeMakeCanonicalizingConstructor(canonicalizable, Canon) {\n    var Canonicalize = MakeCanonicalizer(canonicalizable, Canon);\n    return function MakeCanonicalizingConstructor(Constructor) {\n      var CanonicalizingConstructor = function CanonicalizingConstructor() {\n        return Canonicalize(Constructor.apply(void 0, arguments));\n      };\n\n      if (Constructor.name) setName(CanonicalizingConstructor, 'Canonicalized' + Constructor.name);\n      return CanonicalizingConstructor;\n    };\n  } // Canonicalization:\n  // * Hash the value and check if a value with that hash exists in the canonical store (checking for collisions)\n  // * If a canonical copy exists:\n  // *   Free the new, non-canonical copy\n  // *   Return the canonical copy\n  // * Else:\n  // *   Generate any derived data for the result\n  // *   Set the canonical store to map the hash to the result\n  // *   Return the result\n\n\n  function MakeCanonicalizer(_ref9, Canon) {\n    var Hash = _ref9.Hash,\n        Equal = _ref9.Equal,\n        SetDerived = _ref9.SetDerived;\n    return function Canonicalize(newObj) {\n      var _Canon = Canon(),\n          GetCanon = _Canon.GetCanon,\n          SetCanon = _Canon.SetCanon,\n          Free = _Canon.Free;\n\n      var bin = Hash(newObj);\n      var canonical = GetCanon(bin);\n\n      while (canonical && !Equal(newObj, canonical)) {\n        console.error(\"COLLISION: \".concat(bin, \"\\n\"), {\n          newObj: newObj,\n          canonical: canonical\n        });\n        canonical = GetCanon(++bin);\n      }\n\n      if (canonical) Free(newObj);else {\n        SetDerived(newObj, bin);\n        SetCanon(bin, newObj);\n        canonical = newObj;\n      }\n      return canonical;\n    };\n  } // Fowler–Noll–Vo hash function for 32 bits\n  // Several variations are provided for best performance\n\n\n  var FNV_PRIME = 16777619;\n  var FNV_OFFSET_BASIS = 2166136261; // (...[Number]) -> Hash\n  // Used to avoid allocating an array\n\n  function of() {\n    var len = arguments.length;\n    var hash = FNV_OFFSET_BASIS;\n\n    for (var i = 0; i < len; i++) {\n      var n = arguments[i] | 0;\n\n      for (var j = 0; j < 4; j++) {\n        hash *= FNV_PRIME;\n        hash |= 0;\n        hash ^= n & 0xFF;\n        n >>>= 8;\n      }\n    }\n\n    return checkNaN(hash);\n  } // [Number] -> Hash\n\n\n  function ofArray(array) {\n    var len = array.length;\n    var hash = FNV_OFFSET_BASIS;\n\n    for (var i = 0; i < len; i++) {\n      var n = array[i] | 0;\n\n      for (var j = 0; j < 4; j++) {\n        hash *= FNV_PRIME;\n        hash |= 0;\n        hash ^= n & 0xFF;\n        n >>>= 8;\n      }\n    }\n\n    return checkNaN(hash);\n  }\n\n  function checkNaN(n) {\n    if (isNaN(n)) throw TypeError(\"Expected non-NaN: \" + n);\n    return n;\n  }\n\n  var subhashes = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n  var ToCanonicalizeNeighborhoodConstructor = function ToCanonicalizeNeighborhoodConstructor(opts) {\n    return MakeMakeCanonicalizingConstructor(Canonicalizable(opts), Canon.Neighborhood);\n  };\n\n  function Canonicalizable(_ref10) {\n    var Branch = _ref10.Branch,\n        Edge = _ref10.Edge,\n        Leaf = _ref10.Leaf,\n        Next = _ref10.Next;\n    var BranchGetHash = Branch.GetHash;\n    var EdgeGetHash = Edge.GetHash;\n    var LeafGetHash = Leaf.GetHash,\n        LEAF_SIZE = Leaf.SIZE;\n    var Canonicalizable = {\n      NeighborhoodEqual: NeighborhoodEqual,\n      NeighborhoodHash: NeighborhoodHash,\n      NeighborhoodSetDerived: NeighborhoodSetDerived\n    };\n    return stripLeft('Neighborhood')(Canonicalizable);\n\n    function NeighborhoodEqual(a, b) {\n      if (a.node !== b.node) return false;\n\n      for (var i = 0; i < 4; i++) {\n        if (a.edges[i] !== b.edges[i] || a.corners[i] !== b.corners[i]) return false;\n      }\n\n      return true;\n    }\n\n    function NeighborhoodHash(_ref11) {\n      var node = _ref11.node,\n          edges = _ref11.edges,\n          corners = _ref11.corners;\n      subhashes[0] = GetHash(node);\n\n      for (var i = 0; i < 4; i++) {\n        subhashes[i + 1] = EdgeGetHash(edges[i]);\n        subhashes[i + 5] = corners[i];\n      }\n\n      return ofArray(subhashes);\n    }\n\n    function NeighborhoodSetDerived(neighborhood, hash) {\n      var node = neighborhood.node,\n          neighbors = neighborhood.neighbors;\n      neighborhood.hash = hash;\n      neighborhood.next = Next.apply(void 0, [node].concat(_toConsumableArray(neighbors)));\n      return neighborhood;\n    }\n\n    function GetHash(node) {\n      return node.size === LEAF_SIZE ? LeafGetHash(node) : BranchGetHash(node);\n    }\n  }\n\n  var ToNewNeighborhood = function ToNewNeighborhood(_ref12) {\n    var Allocate = _ref12.Allocate,\n        Branch = _ref12.Branch,\n        Leaf = _ref12.Leaf;\n    var BranchGetEdge = Branch.GetEdge,\n        BranchGetCorner = Branch.GetCorner;\n    var LeafGetEdge = Leaf.GetEdge,\n        LeafGetCorner = Leaf.GetCorner,\n        LEAF_SIZE = Leaf.SIZE;\n    return function NewNeighborhood(node) // N,  S,  W,  E,\n    // NW, NE, SW, SE\n    {\n      var raw = Allocate(),\n          size = node.size,\n          sg = node.storeGeneration;\n      raw.size = size;\n      raw.node = node;\n      var neighborsOffset = arguments.length - 8;\n      var mixedStores = false;\n      if (size === LEAF_SIZE) for (var i = 0, j = neighborsOffset; i < 4; i++, j++) {\n        raw.neighbors[i] = arguments[j];\n        raw.neighbors[i + 4] = arguments[j + 4];\n        var oppositeEdge = (i + 1 & 1) + (i & 2),\n            oppositeCorner = 3 - i;\n        raw.edges[i] = LeafGetEdge(arguments[j], oppositeEdge);\n        raw.corners[i] = LeafGetCorner(arguments[j + 4], oppositeCorner);\n      } else for (var _i = 0, _j = neighborsOffset; _i < 4; _i++, _j++) {\n        raw.neighbors[_i] = arguments[_j];\n        raw.neighbors[_i + 4] = arguments[_j + 4];\n\n        var _oppositeEdge = (_i + 1 & 1) + (_i & 2),\n            _oppositeCorner = 3 - _i;\n\n        raw.edges[_i] = BranchGetEdge(arguments[_j], _oppositeEdge);\n        raw.corners[_i] = BranchGetCorner(arguments[_j + 4], _oppositeCorner);\n        if (sg !== arguments[_i].storeGeneration || sg !== arguments[_j].storeGeneration) mixedStores = true;\n      }\n      if (mixedStores) throw Error(\"Mixed stores\", JSON.stringify(raw));\n      return raw;\n    };\n  };\n\n  var MemoizeNext = function MemoizeNext(_ref13) {\n    var Allocate = _ref13.Allocate,\n        Branch = _ref13.Branch,\n        Edge = _ref13.Edge,\n        Leaf = _ref13.Leaf;\n    return function MemoizeNext(Next) {\n      var NewNeighborhood = ToNewNeighborhood({\n        Allocate: Allocate,\n        Branch: Branch,\n        Edge: Edge,\n        Leaf: Leaf\n      });\n      var CanonicalizeNeighborhoodConstructor = ToCanonicalizeNeighborhoodConstructor({\n        Branch: Branch,\n        Edge: Edge,\n        Leaf: Leaf,\n        Next: Next\n      });\n      NewNeighborhood = CanonicalizeNeighborhoodConstructor(NewNeighborhood);\n      return function MemoizedNext() {\n        return NewNeighborhood.apply(void 0, arguments).next;\n      };\n    };\n  };\n\n  var ToMemoizeSetMany = function ToMemoizeSetMany(memoTable) {\n    return function (SetMany) {\n      if (SetMany.name) setName(MemoizedSetMany, 'Memoized' + SetMany.name);\n      return MemoizedSetMany;\n\n      function MemoizedSetMany(node, pairs) {\n        if (pairs.length !== 0) return SetMany(node, pairs);\n        var memo = memoTable.get(node);\n        if (memo) return memo;else {\n          var result = SetMany(node, pairs);\n          memoTable.set(node, result);\n          return result;\n        }\n      }\n    };\n  };\n\n  var MemoizeWithTable = function MemoizeWithTable(memoTable) {\n    return function (Fn) {\n      if (Fn.name) setName(Memoized, 'Memoized' + Fn.name);\n      return Memoized;\n\n      function Memoized(arg) {\n        var memo = memoTable.get(arg);\n        if (memo) return memo;else {\n          var result = Fn(arg);\n          memoTable.set(arg, result);\n          return result;\n        }\n      }\n    };\n  };\n\n  function WithClearedMemoTable(memoTable) {\n    return function (Fn) {\n      return function WithClearedMemoTable() {\n        memoTable.clear();\n        return Fn.apply(void 0, arguments);\n      };\n    };\n  }\n\n  var SIZE = 32;\n  var WEST_EDGE = 0x80000000;\n  var EAST_EDGE = 0x00000001;\n\n  function LeafAllocate() {\n    var leaf = new Int32Array(SIZE + 1);\n    leaf.size = SIZE;\n    leaf.hash = NaN;\n    leaf.edges = [0, 0, 0, 0];\n    leaf.corners = [0, 0, 0, 0];\n    leaf.population = NaN;\n    return leaf;\n  }\n\n  var BoundingRect = function LeafBoundingRect(leaf, leafLeft, leafTop, boundingRect) {\n    if (leaf.population === 0) return boundingRect;\n\n    for (var y = 0; y < SIZE; y++) {\n      var row = leaf[y];\n\n      if (row !== 0) {\n        var gridY = leafTop + y; // Sign bit must be handled separately due to the use of `log2`\n\n        var westBit = row & WEST_EDGE;\n        var butWestBit = row & ~WEST_EDGE;\n        var westernmostSetBit = westBit !== 0 ? 31 : log2(butWestBit) | 0;\n        var easternmostSetBit = butWestBit === 0 ? 31 : log2(lsb(butWestBit)) | 0;\n        var westX = SIZE - 1 - westernmostSetBit;\n        var eastX = SIZE - 1 - easternmostSetBit;\n        var gridWest = westX + leafLeft;\n        var gridEast = eastX + leafLeft;\n        boundingRect.top = min(gridY, boundingRect.top);\n        boundingRect.bottom = max(gridY + 1, boundingRect.bottom);\n        boundingRect.left = min(gridWest, boundingRect.left);\n        boundingRect.right = max(gridEast + 1, boundingRect.right);\n      }\n    }\n\n    return boundingRect;\n  };\n\n  var log2 = Math.log2,\n      lsb = function lsb(x) {\n    return x & ~(x - 1);\n  },\n      max = function max(x, y) {\n    return x > y ? x : y;\n  },\n      min = function min(x, y) {\n    return x > y ? y : x;\n  };\n\n  function LeafEqual(a, b) {\n    for (var i = 0; i < SIZE; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  }\n\n  function LeafSetDerived(leaf, hash) {\n    leaf.hash = hash;\n    var west = 0,\n        east = 0,\n        population$1 = 0;\n\n    for (var i = 0; i < SIZE; i++) {\n      var row = leaf[i];\n      west |= (row & WEST_EDGE) >>> i;\n      east |= (row & EAST_EDGE) << 31 - i;\n      population$1 += population(row);\n    }\n\n    leaf.edges[N] = leaf[0];\n    leaf.edges[S] = leaf[31];\n    leaf.edges[W] = west;\n    leaf.edges[E] = east;\n    leaf.corners[NW] = west >>> 31;\n    leaf.corners[NE] = east >>> 31;\n    leaf.corners[SW] = west & 1;\n    leaf.corners[SE] = east & 1;\n    leaf.population = population$1;\n    return leaf;\n  }\n\n  var Canonicalizable$1 = {\n    Equal: LeafEqual,\n    Hash: ofArray,\n    SetDerived: LeafSetDerived\n  };\n  var CanonicalizeLeafConstructor = MakeMakeCanonicalizingConstructor(Canonicalizable$1, Canon.Leaf);\n\n  function CheckBounds(x, y) {\n    if (x < 0) Throw(x, y, \"x < 0\");\n    if (y < 0) Throw(x, y, \"y < 0\");\n    if (x >= SIZE) Throw(x, y, \"x >= \" + SIZE);\n    if (y >= SIZE) Throw(x, y, \"y >= \" + SIZE);\n  }\n\n  function Throw(x, y, explanation) {\n    throw TypeError(\"Out of bounds: \".concat(explanation, \" in \").concat([x, y]));\n  }\n\n  var Copy = function Copy(_ref14) {\n    var Allocate = _ref14.Allocate;\n    return function LeafCopy(leaf) {\n      var raw = Allocate();\n\n      for (var i = 0; i < SIZE; i++) {\n        raw[i] = leaf[i];\n      }\n\n      raw.hash = leaf.hash;\n      CopyDerived(leaf, raw);\n      return raw;\n    };\n  };\n\n  function CopyDerived(original, copy) {\n    copy.population = original.population;\n    var ce = copy.edges,\n        cc = copy.corners,\n        oe = original.edges,\n        oc = original.corners;\n\n    for (var i = 0; i < 4; i++) {\n      cc[i] = oc[i];\n      ce[i] = oe[i];\n    }\n  }\n\n  function LeafFree(leaf) {\n    leaf.hash = NaN;\n    leaf.population = NaN;\n    return leaf;\n  }\n\n  function LeafMutate(leaf, _ref15, state) {\n    var _ref16 = _slicedToArray(_ref15, 2),\n        x = _ref16[0],\n        y = _ref16[1];\n\n    CheckBounds(x, y);\n    var row = leaf[y],\n        mask = WEST_EDGE >>> x;\n    leaf[y] = state ? row | mask : row & ~mask;\n    return leaf;\n  }\n\n  var FromLiving = function FromLiving(_ref17) {\n    var Allocate = _ref17.Allocate;\n    return function LeafFromLiving(locations) {\n      var raw = Allocate();\n\n      for (var i = 0; i < SIZE; i++) {\n        raw[i] = 0;\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = locations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var loc = _step3.value;\n          LeafMutate(raw, loc, true);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return raw;\n    };\n  };\n\n  function PrimitiveLeafGet(leaf, x, y) {\n    var row = leaf[y],\n        mask = WEST_EDGE >>> x;\n    return (row & mask) !== 0;\n  }\n\n  function LeafGet(leaf, _ref18) {\n    var _ref19 = _slicedToArray(_ref18, 2),\n        x = _ref19[0],\n        y = _ref19[1];\n\n    CheckBounds(x, y);\n    return PrimitiveLeafGet(leaf, x, y);\n  }\n\n  function LeafGetCorner(leaf, direction) {\n    return leaf.corners[direction];\n  }\n\n  function LeafGetEdge(leaf, direction) {\n    return leaf.edges[direction];\n  }\n\n  function LeafGetHash(leaf) {\n    return leaf.hash;\n  }\n\n  function LeafGetPopulation(leaf) {\n    return leaf.population;\n  }\n\n  function Living(leaf) {\n    var y, x;\n    return _regeneratorRuntime.wrap(function Living$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            y = 0;\n\n          case 1:\n            if (!(y < SIZE)) {\n              _context.next = 13;\n              break;\n            }\n\n            x = 0;\n\n          case 3:\n            if (!(x < SIZE)) {\n              _context.next = 10;\n              break;\n            }\n\n            if (!(PrimitiveLeafGet(leaf, x, y) === true)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 7;\n            return [x, y];\n\n          case 7:\n            x++;\n            _context.next = 3;\n            break;\n\n          case 10:\n            y++;\n            _context.next = 1;\n            break;\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked);\n  }\n\n  var Next = function Next(_ref20) {\n    var Allocate = _ref20.Allocate;\n    return function LeafNext(leaf, N$1, S$1, W$1, E$1, NW$1, NE$1, SW$1, SE$1) {\n      var raw = Allocate(leaf) // Set up row data for the row just north of the block (`north.south`)...\n      ,\n          rowN = N$1.edges[S],\n          westSiblingN = rowN >>> 1 | NW$1.corners[SE] << SIZE - 1,\n          eastSiblingN = rowN << 1 | NE$1.corners[SW],\n          siblingCountN_0 = westSiblingN ^ eastSiblingN,\n          siblingCountN_1 = westSiblingN & eastSiblingN,\n          familyCountN_0 = rowN ^ siblingCountN_0,\n          familyCountN_1 = rowN & siblingCountN_0 | siblingCountN_1 // ...and for the northernmost row of the block (`leaf[0]`), where we start.\n      ,\n          row = leaf[0],\n          westSibling = row >>> 1 | W$1.edges[E] & WEST_EDGE,\n          eastSibling = row << 1 | E$1.edges[W] >>> 31,\n          siblingCount_0 = westSibling ^ eastSibling,\n          siblingCount_1 = westSibling & eastSibling,\n          familyCount_0 = row ^ siblingCount_0,\n          familyCount_1 = row & siblingCount_0 | siblingCount_1 // The adjacent columns for the row *south* of the current index\n      ,\n          westS = W$1.edges[E] << 1 | SW$1.corners[NE],\n          eastS = E$1.edges[W] << 1 | SE$1.corners[NW]; // Put the row south of the block in the extra spot at the end of the array\n\n      leaf[SIZE] = S$1.edges[N];\n\n      for (var y = 0; y < SIZE; y++) {\n        // To compute the the current row, we need the data for the row south of it (`leaf[y + 1]`)\n        var rowS = leaf[y + 1],\n            westSiblingS = rowS >>> 1 | westS & WEST_EDGE,\n            eastSiblingS = rowS << 1 | eastS >>> 31 // Total living siblings (2 bits)\n        ,\n            siblingCountS_0 = westSiblingS ^ eastSiblingS,\n            siblingCountS_1 = westSiblingS & eastSiblingS // Total living family (2 bits)\n        ,\n            familyCountS_0 = rowS ^ siblingCountS_0,\n            familyCountS_1 = rowS & siblingCountS_0 | siblingCountS_1 // Total living neighbors, first bit/carry\n        ,\n            xor0 = familyCountN_0 ^ familyCountS_0,\n            and0 = familyCountN_0 & familyCountS_0,\n            sum0 = siblingCount_0 ^ xor0,\n            carry0 = siblingCount_0 & xor0 | and0 // Total living neighbors, second bit/carry\n        ,\n            xor1 = familyCountN_1 ^ familyCountS_1,\n            and1 = familyCountN_1 & familyCountS_1,\n            sum1 = siblingCount_1 ^ xor1,\n            carry1 = siblingCount_1 & xor1 | and1 // B3S23\n        ,\n            isAlive = row,\n            twoOrThreeNeighbors = (carry0 ^ sum1) & ~carry1,\n            nextRow = twoOrThreeNeighbors & (isAlive | sum0); // Store the result\n\n        raw[y] = nextRow; // Cache the row data for the next iteration\n\n        familyCountN_0 = familyCount_0;\n        familyCountN_1 = familyCount_1;\n        row = rowS;\n        siblingCount_0 = siblingCountS_0;\n        siblingCount_1 = siblingCountS_1;\n        familyCount_0 = familyCountS_0;\n        familyCount_1 = familyCountS_1; // Shift the border into positon for the next iteration\n\n        westS <<= 1;\n        eastS <<= 1;\n      }\n\n      leaf[SIZE] = 0;\n      return raw;\n    };\n  };\n\n  var Render = function Render() {\n    return function LeafRender(leaf, leafLeftGrid, leafTopGrid, renderCfg) {\n      var imageData = renderCfg.imageData,\n          viewport = renderCfg.viewport,\n          pixelsPerCell = renderCfg.scale,\n          colors = renderCfg.colors,\n          viewportLeftGrid = viewport.left,\n          viewportRightGrid = viewport.right,\n          viewportTopGrid = viewport.top,\n          viewportBottomGrid = viewport.bottom,\n          data = imageData.data,\n          imageWidth = imageData.width | 0,\n          imageHeight = imageData.height | 0,\n          alive = colors.alive | 0,\n          leafRightGrid = leafLeftGrid + SIZE,\n          leafBottomGrid = leafTopGrid + SIZE,\n          leafTopImage = (leafTopGrid - viewportTopGrid) * pixelsPerCell,\n          leafLeftImage = (leafLeftGrid - viewportLeftGrid) * pixelsPerCell,\n          boundedLeftGrid = max$1(leafLeftGrid, viewportLeftGrid),\n          boundedRightGrid = min$1(leafRightGrid, viewportRightGrid),\n          boundedTopGrid = max$1(leafTopGrid, viewportTopGrid),\n          boundedBottomGrid = min$1(leafBottomGrid, viewportBottomGrid),\n          columnStart = boundedLeftGrid - leafLeftGrid,\n          rowStart = boundedTopGrid - leafTopGrid,\n          columnEnd = boundedRightGrid - leafLeftGrid,\n          rowEnd = boundedBottomGrid - leafTopGrid;\n\n      if (pixelsPerCell <= 1) {\n        columnStart = ceil(columnStart) | 0;\n        rowStart = ceil(rowStart) | 0;\n        columnEnd = floor(columnEnd) | 0;\n        rowEnd = floor(rowEnd) | 0;\n\n        for (var rowIndex = rowStart; rowIndex < rowEnd; rowIndex++) {\n          var row = leaf[rowIndex] | 0,\n              y = rowIndex * pixelsPerCell + leafTopImage | 0,\n              yOffset = y * imageWidth | 0;\n\n          for (var columnIndex = columnStart, mask = WEST_EDGE >>> columnStart; columnIndex < columnEnd; columnIndex++, mask >>>= 1) {\n            var x = columnIndex * pixelsPerCell + leafLeftImage | 0,\n                isAlive = (row & mask) !== 0;\n            if (isAlive) data[yOffset + x] = alive;\n          }\n        }\n      } else {\n        // Round outward to include cells on the image edge\n        columnStart = floor(columnStart) | 0;\n        rowStart = floor(rowStart) | 0;\n        columnEnd = ceil(columnEnd) | 0;\n        rowEnd = ceil(rowEnd) | 0;\n\n        for (var _rowIndex = rowStart; _rowIndex < rowEnd; _rowIndex++) {\n          var _row = leaf[_rowIndex] | 0,\n              cellTopImage = _rowIndex * pixelsPerCell + leafTopImage,\n              cellBottomImage = cellTopImage + pixelsPerCell // Avoid wrapping when a cell is on the edge of the image\n          ,\n              cellTopPx = max$1(0, cellTopImage) | 0,\n              cellBottomPx = min$1(imageHeight, cellBottomImage) | 0;\n\n          for (var _columnIndex = columnStart; _columnIndex < columnEnd; _columnIndex++) {\n            var cellLeftImage = _columnIndex * pixelsPerCell + leafLeftImage,\n                cellRightImage = cellLeftImage + pixelsPerCell // Avoid wrapping when a cell is on the edge of the image\n            ,\n                cellLeftPx = max$1(0, cellLeftImage) | 0,\n                cellRightPx = min$1(imageWidth, cellRightImage) | 0,\n                _mask = WEST_EDGE >>> _columnIndex,\n                _isAlive = (_row & _mask) !== 0;\n\n            if (_isAlive) for (var _y = cellTopPx; _y < cellBottomPx; _y++) {\n              var _yOffset = _y * imageWidth | 0;\n\n              for (var _x = cellLeftPx; _x < cellRightPx; _x++) {\n                data[_yOffset + _x] = alive;\n              }\n            }\n          }\n        }\n      }\n    };\n  };\n\n  var floor = Math.floor,\n      ceil = Math.ceil,\n      max$1 = function max$1(x, y) {\n    return x > y ? x : y;\n  },\n      min$1 = function min$1(x, y) {\n    return x > y ? y : x;\n  };\n\n  var SetMany = function SetMany(_ref21) {\n    var Allocate = _ref21.Allocate;\n    return function LeafSetMany(leaf, pairs) {\n      var newLeaf = Allocate(leaf);\n\n      for (var i = 0; i < SIZE; i++) {\n        newLeaf[i] = leaf[i];\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = pairs[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _ref24 = _step4.value;\n\n          var _ref23 = _slicedToArray(_ref24, 2);\n\n          var loc = _ref23[0];\n          var state = _ref23[1];\n          LeafMutate(newLeaf, loc, state);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return newLeaf;\n    };\n  };\n\n  var raw = {\n    SIZE: SIZE,\n    WEST_EDGE: WEST_EDGE,\n    EAST_EDGE: EAST_EDGE,\n    Allocate: LeafAllocate,\n    BoundingRect: BoundingRect,\n    CanonicalizeConstructor: CanonicalizeLeafConstructor,\n    CheckBounds: CheckBounds,\n    Copy: Copy,\n    Equal: LeafEqual,\n    Free: LeafFree,\n    FromLiving: FromLiving,\n    Get: LeafGet,\n    GetCorner: LeafGetCorner,\n    GetEdge: LeafGetEdge,\n    GetHash: LeafGetHash,\n    GetPopulation: LeafGetPopulation,\n    GetSize: LeafGetPopulation,\n    Living: Living,\n    Next: Next,\n    PrimitiveGet: PrimitiveLeafGet,\n    Render: Render,\n    SetMany: SetMany,\n    SetDerived: LeafSetDerived\n  };\n  var constructors = pick(['Copy', 'FromLiving', 'Next', 'SetMany'])(raw);\n\n  var withSetDerived = _objectSpread({}, raw, {}, map(ConfigureConstructor)(constructors));\n\n  function ConfigureConstructor(fn) {\n    var withAllocate = fn({\n      Allocate: LeafAllocate\n    });\n\n    var withSetDerived = function withSetDerived() {\n      return LeafSetDerived(withAllocate.apply(void 0, arguments));\n    };\n\n    return withSetDerived;\n  }\n\n  var LeafAllocateCtx = Allocate.Leaf;\n\n  var LeafAllocate$1 = function LeafAllocate$1() {\n    return LeafAllocateCtx().apply(void 0, arguments);\n  };\n\n  var Leaf = _objectSpread({}, raw, {\n    Allocate: LeafAllocate$1,\n    CanonicalizeConstructor: CanonicalizeLeafConstructor\n  });\n\n  var HASH = 'hash';\n\n  var Copy$1 = function Copy$1(_ref25) {\n    var Allocate = _ref25.Allocate,\n        Copy = _ref25.Recur;\n    return function EdgeCopy(edge) {\n      var raw = Allocate(),\n          hasLeafChildren = typeof edge[0] === 'number';\n\n      if (hasLeafChildren) {\n        raw[0] = edge[0];\n        raw[1] = edge[1];\n      } else {\n        raw[0] = Copy(edge[0]);\n        raw[1] = Copy(edge[1]);\n      }\n\n      raw[HASH] = edge[HASH];\n      return raw;\n    };\n  };\n\n  function EdgeGetHash(edge) {\n    return typeof edge === 'number' ? edge : edge[HASH];\n  }\n\n  function EdgeGetPopulation(edge) {\n    if (typeof edge === 'number') return population(edge);else if (edge[0] === edge[1]) return 2 * EdgeGetPopulation(edge[0]);else return EdgeGetPopulation(edge[0]) + EdgeGetPopulation(edge[1]);\n  }\n\n  var New = function New(_ref26) {\n    var Allocate = _ref26.Allocate;\n    return function EdgeNew(e0, e1) {\n      var raw = Allocate();\n      raw[0] = e0;\n      raw[1] = e1;\n      return raw;\n    };\n  };\n\n  var Edge = {\n    Copy: Copy$1,\n    GetHash: EdgeGetHash,\n    GetPopulation: EdgeGetPopulation,\n    New: New\n  };\n\n  function EdgeEqual(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n  }\n\n  var ToCanonicalizeConstructor = function ToCanonicalizeConstructor() {\n    return MakeMakeCanonicalizingConstructor(Canonicalizable$2(), Canon.Edge);\n  };\n\n  function Canonicalizable$2() {\n    var Canonicalizable = {\n      EdgeEqual: EdgeEqual,\n      EdgeHash: EdgeHash,\n      EdgeSetDerived: EdgeSetDerived\n    };\n    return stripLeft('Edge')(Canonicalizable);\n\n    function EdgeHash(e) {\n      var isLeaf = typeof e[0] === 'number';\n      return isLeaf ? of(e[0], e[1]) : of(e[0][HASH], e[1][HASH]);\n    }\n\n    function EdgeSetDerived(edge, hash) {\n      var hasLeafChildren = typeof edge[0] === 'number';\n      edge[HASH] = hash;\n      return edge;\n    }\n  }\n\n  var AllocateCtxEdge = Allocate.Edge;\n\n  var AllocateBranch = function AllocateBranch() {\n    return AllocateCtxEdge().apply(void 0, arguments);\n  };\n\n  var CanonicalizeEdgeConstructor = ToCanonicalizeConstructor();\n  var New$1 = CanonicalizeEdgeConstructor(Edge.New({\n    Allocate: AllocateBranch\n  }));\n  var memoTable = new Map();\n  var MemoizedCopy = MemoizeWithTable(memoTable)(CanonicalizeEdgeConstructor(Edge.Copy({\n    Allocate: AllocateBranch,\n    Recur: function Recur(edge) {\n      return Copy$2(edge);\n    }\n  })));\n  var Copy$2 = WithClearedMemoTable(memoTable)(MemoizedCopy);\n\n  var Edge$1 = _objectSpread({}, Edge, {\n    CanonicalizeConstructor: CanonicalizeEdgeConstructor,\n    Copy: Copy$2,\n    New: New$1\n  });\n\n  function BranchEqual(a, b) {\n    for (var i = 0; i < 4; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  }\n\n  function BranchGetCorner(branch, direction) {\n    return branch.corners[direction];\n  }\n\n  function BranchGetEdge(branch, direction) {\n    return branch.edges[direction];\n  }\n\n  function BranchGetHash(branch) {\n    return branch.hash;\n  }\n\n  function BranchGetPopulation(branch) {\n    return branch.population;\n  }\n\n  var ToCanonicalizeConstructor$1 = function ToCanonicalizeConstructor$1(opts) {\n    return MakeMakeCanonicalizingConstructor(Canonicalizable$3(opts), Canon.Branch);\n  };\n\n  function Canonicalizable$3(_ref27) {\n    var Edge = _ref27.Edge,\n        Leaf = _ref27.Leaf;\n    var EdgeNew = Edge.New;\n    var LEAF_SIZE = Leaf.SIZE,\n        LeafGetCorner = Leaf.GetCorner,\n        LeafGetEdge = Leaf.GetEdge,\n        LeafGetHash = Leaf.GetHash,\n        LeafGetPopulation = Leaf.GetPopulation;\n    var Canonicalizable = {\n      BranchEqual: BranchEqual,\n      BranchHash: BranchHash,\n      BranchSetDerived: BranchSetDerived\n    };\n    return stripLeft('Branch')(Canonicalizable);\n\n    function HasLeafChildren(branch) {\n      return branch.size === LEAF_SIZE * 2;\n    }\n\n    function BranchHash(branch) {\n      if (HasLeafChildren(branch)) for (var i = 0; i < 4; i++) {\n        subhashes$1[i] = LeafGetHash(branch[i]);\n      } else for (var _i2 = 0; _i2 < 4; _i2++) {\n        subhashes$1[_i2] = BranchGetHash(branch[_i2]);\n      }\n      return ofArray(subhashes$1);\n    }\n\n    function BranchSetDerived(branch, hash) {\n      return HasLeafChildren(branch) ? BranchWithLeafChildrenSetDerived(branch, hash) : BranchWithBranchChildrenSetDerived(branch, hash);\n    }\n\n    function BranchWithLeafChildrenSetDerived(branch, hash) {\n      var sg = branch.storeGeneration;\n      branch.hash = hash;\n      var population = 0;\n\n      for (var i = 0; i < 4; i++) {\n        var _EDGE_QUADRANTS$i = _slicedToArray(EDGE_QUADRANTS[i], 2),\n            sq0 = _EDGE_QUADRANTS$i[0],\n            sq1 = _EDGE_QUADRANTS$i[1],\n            e0 = LeafGetEdge(branch[sq0], i),\n            e1 = LeafGetEdge(branch[sq1], i);\n\n        branch.edges[i] = EdgeNew(e0, e1);\n        if (sg !== branch.edges[i].storeGeneration) throw Error(\"Mixed stores:\\n\" + JSON.stringify(branch, null, 2));\n        branch.corners[i] = LeafGetCorner(branch[i], i);\n        population += LeafGetPopulation(branch[i]);\n      }\n\n      branch.population = population;\n      return branch;\n    }\n\n    function BranchWithBranchChildrenSetDerived(branch, hash) {\n      branch.hash = hash;\n      var population = 0;\n\n      for (var i = 0; i < 4; i++) {\n        var _EDGE_QUADRANTS$i2 = _slicedToArray(EDGE_QUADRANTS[i], 2),\n            sq0 = _EDGE_QUADRANTS$i2[0],\n            sq1 = _EDGE_QUADRANTS$i2[1],\n            e0 = BranchGetEdge(branch[sq0], i),\n            e1 = BranchGetEdge(branch[sq1], i);\n\n        branch.edges[i] = EdgeNew(e0, e1);\n        branch.corners[i] = BranchGetCorner(branch[i], i);\n        population += BranchGetPopulation(branch[i]);\n      }\n\n      branch.population = population;\n      return branch;\n    }\n  }\n\n  var EDGE_QUADRANTS = [[NW, NE], [SW, SE], [NW, SW], [NE, SE]];\n  var subhashes$1 = [0, 0, 0, 0];\n  var QUADRANTS = [{\n    index: 0,\n    offset: [0, 0]\n  }, {\n    index: 1,\n    offset: [0.5, 0]\n  }, {\n    index: 2,\n    offset: [0, 0.5]\n  }, {\n    index: 3,\n    offset: [0.5, 0.5]\n  }];\n\n  var BoundingRect$1 = function BoundingRect$1(_ref28) {\n    var BoundingRect = _ref28.Recur;\n    return function BranchBoundingRect(branch, branchLeft, branchTop, boundingRect) {\n      if (branch.population === 0) return boundingRect;\n      var size = branch.size;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = QUADRANTS[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _ref30 = _step5.value;\n          var index = _ref30.index;\n\n          var _ref29$offset = _slicedToArray(_ref30.offset, 2);\n\n          var dx = _ref29$offset[0];\n          var dy = _ref29$offset[1];\n          var quadrant = branch[index],\n              quadrantLeft = branchLeft + dx * size,\n              quadrantTop = branchTop + dy * size,\n              quadrantRight = quadrantLeft + size / 2,\n              quadrantBottom = quadrantTop + size / 2;\n          if (boundingRect.top <= quadrantTop && quadrantBottom < boundingRect.bottom && boundingRect.left <= quadrantLeft && quadrantRight < boundingRect.right) continue;\n          boundingRect = BoundingRect(quadrant, quadrantLeft, quadrantTop, boundingRect);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return boundingRect;\n    };\n  };\n\n  var Copy$3 = function Copy$3(_ref31) {\n    var Allocate = _ref31.Allocate,\n        Copy = _ref31.Recur,\n        EdgeCopy = _ref31.EdgeCopy;\n    return function BranchCopy(branch) {\n      var raw = Allocate();\n\n      for (var i = 0; i < 4; i++) {\n        raw[i] = Copy(branch[i]);\n      }\n\n      raw.size = branch.size;\n      raw.hash = branch.hash;\n      CopyDerived(branch, raw);\n      return raw;\n    };\n\n    function CopyDerived(original, copy) {\n      copy.population = original.population;\n      var ce = copy.edges,\n          cc = copy.corners,\n          oe = original.edges,\n          oc = original.corners;\n\n      for (var i = 0; i < 4; i++) {\n        cc[i] = oc[i];\n        ce[i] = EdgeCopy(oe[i]);\n      }\n    }\n  };\n\n  var QuadrantLocation = function QuadrantLocation(location, size) {\n    var _Quadrant = Quadrant(location, size),\n        index = _Quadrant.index,\n        _Quadrant$offset = _slicedToArray(_Quadrant.offset, 2),\n        dx = _Quadrant$offset[0],\n        dy = _Quadrant$offset[1];\n\n    var _location = _slicedToArray(location, 2),\n        x = _location[0],\n        y = _location[1];\n\n    return {\n      index: index,\n      location: [x - dx * size, y - dy * size]\n    };\n  };\n\n  var InBounds = function InBounds(x, size) {\n    return 0 <= x && x < size;\n  };\n\n  var Quadrant = function Quadrant(_ref32, size) {\n    var _ref33 = _slicedToArray(_ref32, 2),\n        x = _ref33[0],\n        y = _ref33[1];\n\n    var _iteratorNormalCompletion6 = true;\n    var _didIteratorError6 = false;\n    var _iteratorError6 = undefined;\n\n    try {\n      for (var _iterator6 = QUADRANTS[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n        var Q = _step6.value;\n\n        var _Q$offset = _slicedToArray(Q.offset, 2),\n            dx = _Q$offset[0],\n            dy = _Q$offset[1];\n\n        if (InBounds(x - dx * size, size / 2) && InBounds(y - dy * size, size / 2)) return Q;\n      }\n    } catch (err) {\n      _didIteratorError6 = true;\n      _iteratorError6 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n          _iterator6.return();\n        }\n      } finally {\n        if (_didIteratorError6) {\n          throw _iteratorError6;\n        }\n      }\n    }\n\n    throw TypeError(\"Out of bounds: location = \".concat([x, y], \", size = \").concat(size));\n  };\n\n  var FromLiving$1 = function FromLiving$1(_ref34) {\n    var Allocate = _ref34.Allocate,\n        FromLiving = _ref34.Recur;\n    return function BranchFromLiving(size, locations) {\n      var raw = Allocate(),\n          partitions = [[], [], [], []];\n      raw.size = size;\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = locations[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var loc = _step7.value;\n\n          var _QuadrantLocation = QuadrantLocation(loc, size),\n              index = _QuadrantLocation.index,\n              location = _QuadrantLocation.location;\n\n          partitions[index].push(location);\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      for (var i = 0; i < 4; i++) {\n        raw[i] = FromLiving(size / 2, partitions[i]);\n      }\n\n      return raw;\n    };\n  };\n\n  var Get = function Get(_ref35) {\n    var Get = _ref35.Recur;\n    return function BranchGet(branch, loc) {\n      var _QuadrantLocation2 = QuadrantLocation(loc, branch.size),\n          index = _QuadrantLocation2.index,\n          location = _QuadrantLocation2.location;\n\n      return Get(branch[index], location);\n    };\n  };\n\n  function BranchGetSize(branch) {\n    return branch.size;\n  }\n\n  var Living$1 = function Living$1(_ref36) {\n    var Living = _ref36.Recur;\n    return (\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function BranchLiving(branch) {\n        var size, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, _ref38, index, _ref37$offset, dx, dy, _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, _ref41, _ref40, x, y;\n\n        return _regeneratorRuntime.wrap(function BranchLiving$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                size = branch.size;\n                _iteratorNormalCompletion8 = true;\n                _didIteratorError8 = false;\n                _iteratorError8 = undefined;\n                _context2.prev = 4;\n                _iterator8 = QUADRANTS[Symbol.iterator]();\n\n              case 6:\n                if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n                  _context2.next = 44;\n                  break;\n                }\n\n                _ref38 = _step8.value;\n                index = _ref38.index;\n                _ref37$offset = _slicedToArray(_ref38.offset, 2);\n                dx = _ref37$offset[0];\n                dy = _ref37$offset[1];\n                _iteratorNormalCompletion9 = true;\n                _didIteratorError9 = false;\n                _iteratorError9 = undefined;\n                _context2.prev = 15;\n                _iterator9 = Living(branch[index])[Symbol.iterator]();\n\n              case 17:\n                if (_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done) {\n                  _context2.next = 27;\n                  break;\n                }\n\n                _ref41 = _step9.value;\n                _ref40 = _slicedToArray(_ref41, 2);\n                x = _ref40[0];\n                y = _ref40[1];\n                _context2.next = 24;\n                return [x + dx * size, y + dy * size];\n\n              case 24:\n                _iteratorNormalCompletion9 = true;\n                _context2.next = 17;\n                break;\n\n              case 27:\n                _context2.next = 33;\n                break;\n\n              case 29:\n                _context2.prev = 29;\n                _context2.t0 = _context2[\"catch\"](15);\n                _didIteratorError9 = true;\n                _iteratorError9 = _context2.t0;\n\n              case 33:\n                _context2.prev = 33;\n                _context2.prev = 34;\n\n                if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n                  _iterator9.return();\n                }\n\n              case 36:\n                _context2.prev = 36;\n\n                if (!_didIteratorError9) {\n                  _context2.next = 39;\n                  break;\n                }\n\n                throw _iteratorError9;\n\n              case 39:\n                return _context2.finish(36);\n\n              case 40:\n                return _context2.finish(33);\n\n              case 41:\n                _iteratorNormalCompletion8 = true;\n                _context2.next = 6;\n                break;\n\n              case 44:\n                _context2.next = 50;\n                break;\n\n              case 46:\n                _context2.prev = 46;\n                _context2.t1 = _context2[\"catch\"](4);\n                _didIteratorError8 = true;\n                _iteratorError8 = _context2.t1;\n\n              case 50:\n                _context2.prev = 50;\n                _context2.prev = 51;\n\n                if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n                  _iterator8.return();\n                }\n\n              case 53:\n                _context2.prev = 53;\n\n                if (!_didIteratorError8) {\n                  _context2.next = 56;\n                  break;\n                }\n\n                throw _iteratorError8;\n\n              case 56:\n                return _context2.finish(53);\n\n              case 57:\n                return _context2.finish(50);\n\n              case 58:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, BranchLiving, null, [[4, 46, 50, 58], [15, 29, 33, 41], [34,, 36, 40], [51,, 53, 57]]);\n      })\n    );\n  };\n\n  var New$2 = function New$2(_ref42) {\n    var Allocate = _ref42.Allocate;\n    return function NewBranch(size) {\n      var raw = Allocate();\n      raw.size = size;\n      var mixedStores = false;\n\n      for (var _len = arguments.length, quadrants = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        quadrants[_key - 1] = arguments[_key];\n      }\n\n      for (var i = 0; i < 4; i++) {\n        raw[i] = quadrants[i];\n\n        if (typeof quadrants[0] === 'object' && raw.storeGeneration !== quadrants[i].storeGeneration) {\n          mixedStores = true;\n        }\n      }\n\n      if (mixedStores) {\n        throw TypeError('Mixed stores: ', JSON.stringify(raw));\n      }\n\n      return raw;\n    };\n  };\n\n  var Next$1 = function Next$1(_ref43) {\n    var Allocate = _ref43.Allocate,\n        Next = _ref43.Recur;\n    return function BranchNext(branch, N, S, W, E, NW$1, NE$1, SW$1, SE$1) {\n      var raw = Allocate(branch),\n          b = branch,\n          subgrids = [NW$1[SE], N[SW], N[SE], NE$1[SW], W[NE], b[NW], b[NE], E[NW], W[SE], b[SW], b[SE], E[SW], SW$1[NE], S[NW], S[NE], SE$1[NW]],\n          sg = subgrids;\n      raw.size = branch.size;\n\n      for (var q = 0; q < 4; q++) {\n        var xOffset = 1 + (q & 1) // [1, 2, 1, 2]\n        ,\n            yOffset = 2 + (q & 2) << 1 // [4, 4, 8, 8]\n        ,\n            _ = xOffset + yOffset,\n            _N = -4,\n            _S = 4,\n            _W = -1,\n            _E = 1;\n\n        raw[q] = Next(sg[_], sg[_ + _N], sg[_ + _S], sg[_ + _W], sg[_ + _E], sg[_ + _N + _W], sg[_ + _N + _E], sg[_ + _S + _W], sg[_ + _S + _E]);\n      }\n\n      return raw;\n    };\n  };\n\n  var Render$1 = function Render$1(_ref44) {\n    var Recur = _ref44.Recur;\n    return function BranchRender(branch, branchLeftGrid, branchTopGrid, renderCfg) {\n      var size = branch.size;\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = QUADRANTS[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var _ref46 = _step10.value;\n          var index = _ref46.index;\n\n          var _ref45$offset = _slicedToArray(_ref46.offset, 2);\n\n          var dx = _ref45$offset[0];\n          var dy = _ref45$offset[1];\n          var quadrant = branch[index],\n              quadrantLeftGrid = branchLeftGrid + dx * size,\n              quadrantTopGrid = branchTopGrid + dy * size;\n          Recur(quadrant, quadrantLeftGrid, quadrantTopGrid, renderCfg);\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n    };\n  };\n\n  var SetMany$1 = function SetMany$1(_ref47) {\n    var Allocate = _ref47.Allocate,\n        SetMany = _ref47.Recur;\n    return function BranchSetMany(branch, pairs) {\n      var raw = Allocate(branch),\n          size = branch.size,\n          partitions = [[], [], [], []];\n      raw.size = size;\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = pairs[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var _ref50 = _step11.value;\n\n          var _ref49 = _slicedToArray(_ref50, 2);\n\n          var loc = _ref49[0];\n          var state = _ref49[1];\n\n          var _QuadrantLocation3 = QuadrantLocation(loc, size),\n              index = _QuadrantLocation3.index,\n              location = _QuadrantLocation3.location;\n\n          partitions[index].push([location, state]);\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      for (var i = 0; i < 4; i++) {\n        raw[i] = SetMany(branch[i], partitions[i]);\n      }\n\n      return raw;\n    };\n  };\n\n  var Branch = {\n    BoundingRect: BoundingRect$1,\n    Copy: Copy$3,\n    FromLiving: FromLiving$1,\n    Get: Get,\n    GetEdge: BranchGetEdge,\n    GetCorner: BranchGetCorner,\n    GetHash: BranchGetHash,\n    GetPopulation: BranchGetPopulation,\n    GetSize: BranchGetSize,\n    Living: Living$1,\n    New: New$2,\n    Next: Next$1,\n    Render: Render$1,\n    SetMany: SetMany$1\n  };\n  var Copy$4 = partialOpts(Branch.Copy)({\n    EdgeCopy: Edge$1.Copy\n  });\n  var BranchAllocateCtx = Allocate.Branch;\n\n  var BranchAllocate = function BranchAllocate() {\n    return BranchAllocateCtx().apply(void 0, arguments);\n  };\n\n  var CanonicalizeBranchConstructor = ToCanonicalizeConstructor$1({\n    Edge: Edge$1,\n    Leaf: Leaf\n  });\n  var New$3 = CanonicalizeBranchConstructor(Branch.New({\n    Allocate: BranchAllocate\n  }));\n\n  var Branch$1 = _objectSpread({}, Branch, {\n    Allocate: BranchAllocate,\n    CanonicalizeConstructor: CanonicalizeBranchConstructor,\n    Copy: Copy$4,\n    New: New$3\n  });\n\n  var Render$2 = function () {\n    var LEAF_SIZE = Leaf.SIZE;\n    var LeafCase = Leaf.Render();\n    var BranchCase = Branch$1.Render({\n      Recur: NodeSwitch\n    });\n    return NodeSwitch;\n\n    function NodeSwitch(node, left, top, renderCfg) {\n      var v = renderCfg.viewport,\n          size = node.size,\n          right = left + size,\n          bottom = top + size,\n          overlapsViewport = left < v.right && right > v.left && top < v.bottom && bottom > v.top;\n      if (!overlapsViewport || node.population === 0) return;\n      var Case = size === LEAF_SIZE ? LeafCase : BranchCase;\n      return Case(node, left, top, renderCfg);\n    }\n  }(); // Tying the knot for a single recursive function of tree size (Size, ...A) -> B\n  // * Inputs are branch and leaf cases.\n  // * The first argument is a tree `size`, and it is used for case dispatch.\n\n\n  var ToFixByArg0 = function ToFixByArg0(LEAF_SIZE) {\n    return function FixByArg0(_ref51) {\n      var Leaf = _ref51.Leaf,\n          Branch = _ref51.Branch;\n      var LeafCase = Leaf,\n          BranchCase = Branch({\n        Recur: DispatchByArg0\n      });\n\n      function DispatchByArg0(size) {\n        for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          rest[_key2 - 1] = arguments[_key2];\n        }\n\n        if (size === LEAF_SIZE) return LeafCase.apply(void 0, rest);else return BranchCase.apply(void 0, [size].concat(rest));\n      }\n\n      return DispatchByArg0;\n    };\n  }; // Tying the knot for a single recursive function of a tree (Tree, ...A) -> B\n  // * Inputs are branch and leaf cases.\n  // * The first argument is a tree node, and its `size` property is used for case dispatch.\n\n\n  var ToFixByArg0Size = function ToFixByArg0Size(LEAF_SIZE) {\n    return function FixByArg0Size(cases) {\n      var Leaf = cases.Leaf,\n          Branch = cases.Branch;\n      Branch = Branch({\n        Recur: DispatchByArg0Size\n      });\n\n      function DispatchByArg0Size(node) {\n        var Case = node.size === LEAF_SIZE ? Leaf : Branch;\n\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          rest[_key3 - 1] = arguments[_key3];\n        }\n\n        return Case.apply(void 0, [node].concat(rest));\n      }\n\n      return DispatchByArg0Size;\n    };\n  };\n\n  var ToDispatchByArg0Size = function ToDispatchByArg0Size(LEAF_SIZE) {\n    return function DispatchByArg0Size(cases) {\n      var Branch = cases.Branch,\n          Leaf = cases.Leaf;\n      return function (node) {\n        for (var _len4 = arguments.length, rest = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          rest[_key4 - 1] = arguments[_key4];\n        }\n\n        return node.size === LEAF_SIZE ? Leaf.apply(void 0, [node].concat(rest)) : Branch.apply(void 0, [node].concat(rest));\n      };\n    };\n  };\n\n  var Allocate$1 = map(function (AC) {\n    return function () {\n      return AC().apply(void 0, arguments);\n    };\n  })(Allocate);\n  var FixByArg0 = ToFixByArg0(Leaf.SIZE);\n  var FixByArg0Size = ToFixByArg0Size(Leaf.SIZE);\n  var DispatchByArg0Size = ToDispatchByArg0Size(Leaf.SIZE); // Configure each case of each recursive functions, where needed\n  // Because the branch cases can't be provided with their recursive callbacks until the end, the branch case configuration involves some extra function composition and partial application.\n\n  var recursiveFnNames = {\n    constructors: ['Copy', 'FromLiving', 'Next', 'SetMany'],\n    byArg0: {\n      node: ['BoundingRect', 'Copy', 'Get', 'Living', 'Next', 'SetMany'],\n      size: ['FromLiving']\n    }\n  }; // Allocation\n\n  var _iteratorNormalCompletion12 = true;\n  var _didIteratorError12 = false;\n  var _iteratorError12 = undefined;\n\n  try {\n    for (var _iterator12 = recursiveFnNames.constructors[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n      var f = _step12.value;\n      Leaf[f] = Leaf[f]({\n        Allocate: Allocate$1.Leaf\n      });\n      Branch$1[f] = partialOpts(Branch$1[f])({\n        Allocate: Allocate$1.Branch\n      });\n    } // Canonicalization\n\n  } catch (err) {\n    _didIteratorError12 = true;\n    _iteratorError12 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n        _iterator12.return();\n      }\n    } finally {\n      if (_didIteratorError12) {\n        throw _iteratorError12;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion13 = true;\n  var _didIteratorError13 = false;\n  var _iteratorError13 = undefined;\n\n  try {\n    for (var _iterator13 = recursiveFnNames.constructors[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n      var _f = _step13.value;\n      Leaf[_f] = Leaf.CanonicalizeConstructor(Leaf[_f]);\n      Branch$1[_f] = compose(Branch$1.CanonicalizeConstructor)(Branch$1[_f]);\n    } // Memoization\n\n  } catch (err) {\n    _didIteratorError13 = true;\n    _iteratorError13 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n        _iterator13.return();\n      }\n    } finally {\n      if (_didIteratorError13) {\n        throw _iteratorError13;\n      }\n    }\n  }\n\n  var MemoizeNext$1 = MemoizeNext({\n    Allocate: Allocate$1.Neighborhood,\n    Branch: Branch$1,\n    Leaf: Leaf,\n    Edge: Edge$1\n  });\n  Leaf.Next = MemoizeNext$1(Leaf.Next);\n  Branch$1.Next = compose(MemoizeNext$1)(Branch$1.Next);\n  var setMemoTable = new Map();\n  var MemoizeSetMany = ToMemoizeSetMany(setMemoTable);\n  Leaf.SetMany = MemoizeSetMany(Leaf.SetMany);\n  Branch$1.SetMany = compose(MemoizeSetMany)(Branch$1.SetMany);\n  var copyMemoTable = new Map();\n  var MemoizeCopy = MemoizeWithTable(copyMemoTable);\n  Leaf.Copy = MemoizeCopy(Leaf.Copy);\n  Branch$1.Copy = compose(MemoizeCopy)(Branch$1.Copy); // Fix\n\n  var Tree = {};\n  var T = Tree;\n  var _iteratorNormalCompletion14 = true;\n  var _didIteratorError14 = false;\n  var _iteratorError14 = undefined;\n\n  try {\n    for (var _iterator14 = recursiveFnNames.byArg0.node[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n      var _f2 = _step14.value;\n      T[_f2] = FixByArg0Size({\n        Branch: Branch$1[_f2],\n        Leaf: Leaf[_f2]\n      });\n    }\n  } catch (err) {\n    _didIteratorError14 = true;\n    _iteratorError14 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n        _iterator14.return();\n      }\n    } finally {\n      if (_didIteratorError14) {\n        throw _iteratorError14;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion15 = true;\n  var _didIteratorError15 = false;\n  var _iteratorError15 = undefined;\n\n  try {\n    for (var _iterator15 = recursiveFnNames.byArg0.size[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n      var _f3 = _step15.value;\n      T[_f3] = FixByArg0({\n        Branch: Branch$1[_f3],\n        Leaf: Leaf[_f3]\n      });\n    } // Entry point config\n\n  } catch (err) {\n    _didIteratorError15 = true;\n    _iteratorError15 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n        _iterator15.return();\n      }\n    } finally {\n      if (_didIteratorError15) {\n        throw _iteratorError15;\n      }\n    }\n  }\n\n  T.SetMany = WithClearedMemoTable(setMemoTable)(T.SetMany);\n  T.Copy = WithClearedMemoTable(copyMemoTable)(T.Copy); // Non-recursive config\n\n  var nonrecursiveFnNames = ['GetEdge', 'GetHash', 'GetPopulation', 'GetSize'];\n\n  for (var _i3 = 0, _nonrecursiveFnNames = nonrecursiveFnNames; _i3 < _nonrecursiveFnNames.length; _i3++) {\n    var _f4 = _nonrecursiveFnNames[_i3];\n    T[_f4] = DispatchByArg0Size({\n      Branch: Branch$1[_f4],\n      Leaf: Leaf[_f4]\n    });\n  } // Misc\n\n\n  T.GetEdgePopulation = function GetEdgePopulation(tree, direction) {\n    var edge = T.GetEdge(tree, direction);\n    return Edge$1.GetPopulation(edge);\n  };\n\n  T.Grow = function Grow(oldTree) {\n    var oldSize = T.GetSize(oldTree);\n    var emptyGrandchild = T.FromLiving(oldSize / 2, []);\n    var size = oldSize * 2;\n    var e = emptyGrandchild,\n        t = T.Copy(oldTree);\n    var grownTree = Branch$1.New(size, Branch$1.New(oldSize, e, e, e, t[NW]), Branch$1.New(oldSize, e, e, t[NE], e), Branch$1.New(oldSize, e, t[SW], e, e), Branch$1.New(oldSize, t[SE], e, e, e));\n    return grownTree;\n  };\n\n  T.Render = Render$2;\n  T.LEAF_SIZE = Leaf.SIZE;\n  T = map(function (val, key) {\n    return typeof val === 'function' ? setName(val, key) : val;\n  })(T);\n  var T$1 = T;\n  var LEAF_SIZE = T$1.LEAF_SIZE;\n\n  function BoundingRect$2(grid) {\n    if (T$1.GetPopulation(grid.root) === 0) return null;\n    var b = {\n      top: Infinity,\n      bottom: -Infinity,\n      left: Infinity,\n      right: -Infinity\n    };\n    b = T$1.BoundingRect(grid.root, -grid.size / 2, -grid.size / 2, b);\n    b.topleft = {\n      x: b.left,\n      y: b.top\n    };\n    b.bottomright = {\n      x: b.right,\n      y: b.bottom\n    };\n    b.width = b.right - b.left;\n    b.height = b.bottom - b.top;\n    b.center = {\n      x: b.left + b.width / 2,\n      y: b.top + b.height / 2\n    };\n    return b;\n  }\n\n  function Copy$5(_ref52) {\n    var size = _ref52.size,\n        root = _ref52.root,\n        empty = _ref52.empty;\n    return {\n      size: size,\n      root: T$1.Copy(root),\n      empty: T$1.Copy(empty)\n    };\n  }\n\n  function FromLiving$2(locations) {\n    // Find the smallest square centered at the origin that contains the locations\n    var halfSize = 1;\n    var _iteratorNormalCompletion16 = true;\n    var _didIteratorError16 = false;\n    var _iteratorError16 = undefined;\n\n    try {\n      for (var _iterator16 = locations[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n        var _ref57 = _step16.value;\n\n        var _ref54 = _slicedToArray(_ref57, 2);\n\n        var x = _ref54[0];\n        var y = _ref54[1];\n        halfSize = Math.max(halfSize, Math.abs(x), Math.abs(y));\n      } // Round up to the nearest power of two.\n\n    } catch (err) {\n      _didIteratorError16 = true;\n      _iteratorError16 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion16 && _iterator16.return != null) {\n          _iterator16.return();\n        }\n      } finally {\n        if (_didIteratorError16) {\n          throw _iteratorError16;\n        }\n      }\n    }\n\n    halfSize = Math.pow(2, Math.ceil(Math.log2(halfSize + 1))); // The minimum grid size is twice the leaf size.\n\n    halfSize = Math.max(halfSize, T$1.LEAF_SIZE);\n    var offsetLocations = locations.map(function (_ref55) {\n      var _ref56 = _slicedToArray(_ref55, 2),\n          x = _ref56[0],\n          y = _ref56[1];\n\n      return [x + halfSize, y + halfSize];\n    });\n    var size = halfSize * 2;\n    return {\n      size: size,\n      root: T$1.FromLiving(size, offsetLocations),\n      empty: T$1.FromLiving(size, [])\n    };\n  }\n\n  function FromRoot(root) {\n    var size = T$1.GetSize(root);\n    var empty = T$1.FromLiving(size, []);\n    return {\n      size: size,\n      root: root,\n      empty: empty\n    };\n  }\n\n  function Living$2(grid) {\n    var offset, _iteratorNormalCompletion17, _didIteratorError17, _iteratorError17, _iterator17, _step17, _ref60, _ref59, x, y;\n\n    return _regeneratorRuntime.wrap(function Living$2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            offset = grid.size / 2;\n            _iteratorNormalCompletion17 = true;\n            _didIteratorError17 = false;\n            _iteratorError17 = undefined;\n            _context3.prev = 4;\n            _iterator17 = T$1.Living(grid.root)[Symbol.iterator]();\n\n          case 6:\n            if (_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done) {\n              _context3.next = 16;\n              break;\n            }\n\n            _ref60 = _step17.value;\n            _ref59 = _slicedToArray(_ref60, 2);\n            x = _ref59[0];\n            y = _ref59[1];\n            _context3.next = 13;\n            return [x - offset, y - offset];\n\n          case 13:\n            _iteratorNormalCompletion17 = true;\n            _context3.next = 6;\n            break;\n\n          case 16:\n            _context3.next = 22;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](4);\n            _didIteratorError17 = true;\n            _iteratorError17 = _context3.t0;\n\n          case 22:\n            _context3.prev = 22;\n            _context3.prev = 23;\n\n            if (!_iteratorNormalCompletion17 && _iterator17.return != null) {\n              _iterator17.return();\n            }\n\n          case 25:\n            _context3.prev = 25;\n\n            if (!_didIteratorError17) {\n              _context3.next = 28;\n              break;\n            }\n\n            throw _iteratorError17;\n\n          case 28:\n            return _context3.finish(25);\n\n          case 29:\n            return _context3.finish(22);\n\n          case 30:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _marked2, null, [[4, 18, 22, 30], [23,, 25, 29]]);\n  }\n\n  function Next$2(grid) {\n    var size = grid.size,\n        root = grid.root,\n        e = grid.empty; // A cell could be born outside the root if at least one edge has a population >= 3\n    // So in that case we expand the grid and iterate the expanded version.\n\n    var _iteratorNormalCompletion18 = true;\n    var _didIteratorError18 = false;\n    var _iteratorError18 = undefined;\n\n    try {\n      for (var _iterator18 = SIDES[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n        var side = _step18.value;\n        var edgePopulation = T$1.GetEdgePopulation(root, side);\n        if (edgePopulation >= 3) return Next$2(Grow(grid));\n      }\n    } catch (err) {\n      _didIteratorError18 = true;\n      _iteratorError18 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion18 && _iterator18.return != null) {\n          _iterator18.return();\n        }\n      } finally {\n        if (_didIteratorError18) {\n          throw _iteratorError18;\n        }\n      }\n    }\n\n    return {\n      size: size,\n      root: T$1.Next(root, e, e, e, e, e, e, e, e),\n      empty: T$1.Copy(e)\n    };\n  }\n\n  function Get$1(grid, location) {\n    var loc = GridLoc(grid.size, location);\n    return loc && T$1.Get(grid.root, loc);\n  }\n\n  function GetHash(grid) {\n    return T$1.GetHash(grid.root);\n  }\n\n  function GetPopulation(grid) {\n    return T$1.GetPopulation(grid.root);\n  }\n\n  function Render$3(grid, renderCfg) {\n    renderCfg.imageData.data.fill(renderCfg.colors.dead);\n    T$1.Render(grid.root, -grid.size / 2, -grid.size / 2, renderCfg);\n  }\n\n  function SetOrMutateMany(grid, pairs, inPlace) {\n    var size = grid.size,\n        empty = grid.empty,\n        root = grid.root,\n        withGridLocs = pairs.map(function (_ref61) {\n      var _ref62 = _slicedToArray(_ref61, 2),\n          loc = _ref62[0],\n          state = _ref62[1];\n\n      return [GridLoc(size, loc), state];\n    }),\n        mustGrow = withGridLocs.some(function (_ref63) {\n      var _ref64 = _slicedToArray(_ref63, 1),\n          loc = _ref64[0];\n\n      return !loc;\n    });\n\n    if (mustGrow) {\n      return SetOrMutateMany(Grow(grid), pairs, inPlace);\n    } else {\n      var method = inPlace ? 'MutateMany' : 'SetMany';\n      return {\n        size: size,\n        empty: inPlace ? empty : T$1.Copy(empty),\n        root: T$1[method](root, withGridLocs)\n      };\n    }\n  }\n\n  var SetMany$2 = function SetMany$2(grid, pairs) {\n    return SetOrMutateMany(grid, pairs, false);\n  };\n\n  function Grow(grid) {\n    return FromRoot(T$1.Grow(grid.root));\n  } // [-size/2, size/2) -> [0, size)\n\n\n  function GridLoc(size, _ref65) {\n    var _ref66 = _slicedToArray(_ref65, 2),\n        x = _ref66[0],\n        y = _ref66[1];\n\n    var d = size / 2,\n        inRoot = -d <= x && x < d && -d <= y && y < d;\n    return inRoot ? [x + d, y + d] : null;\n  }\n\n  var Substore = function Substore(_ref67) {\n    var _Allocate = _ref67.Allocate,\n        _Copy = _ref67.Copy,\n        _Free = _ref67.Free;\n    return function New() {\n      var pool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var inUse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var cleared = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var store = {\n        Allocate: function Allocate() {\n          if (inUse === pool.length) pool.push(_Allocate());\n          cleared = false;\n          return pool[inUse++];\n        },\n        Clear: function Clear() {\n          var half = Math.ceil(pool.length / 2);\n          if (!cleared && inUse <= half) pool.splice(-half, half);\n          var _iteratorNormalCompletion19 = true;\n          var _didIteratorError19 = false;\n          var _iteratorError19 = undefined;\n\n          try {\n            for (var _iterator19 = pool[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n              var obj = _step19.value;\n\n              _Free(obj);\n            }\n          } catch (err) {\n            _didIteratorError19 = true;\n            _iteratorError19 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion19 && _iterator19.return != null) {\n                _iterator19.return();\n              }\n            } finally {\n              if (_didIteratorError19) {\n                throw _iteratorError19;\n              }\n            }\n          }\n\n          cleared = true;\n          inUse = 0;\n          return store;\n        },\n        Free: function Free(obj) {\n          if (pool.length === 0 || pool[inUse - 1] !== obj) throw TypeError(\"Illegal use of Free\");\n\n          _Free(obj);\n\n          inUse--;\n          return store;\n        },\n        Copy: function Copy(ctx) {\n          return New(pool.map(function (obj) {\n            return _Copy(ctx, obj);\n          }), inUse, cleared);\n        },\n        Show: function Show() {\n          return {\n            size: pool.length,\n            next: inUse\n          };\n        }\n      };\n      return store;\n    };\n  };\n\n  function ToMakeCanonicalStore(storables) {\n    var storeGeneration = 0;\n    var MakeCanonicalSubstores = map(ToMakeCanonicalSubstore)(storables);\n    return function Store() {\n      var sg = storeGeneration++,\n          substores = map(function (MCS) {\n        return MCS(sg);\n      })(MakeCanonicalSubstores),\n          Clear = function Clear() {\n        for (var s in substores) {\n          substores[s].Clear();\n        }\n\n        return store;\n      },\n          Show = function Show() {\n        return map(function (S) {\n          return S.Show();\n        })(substores);\n      },\n          store = _objectSpread({}, substores, {\n        Clear: Clear,\n        Show: Show\n      });\n\n      return store;\n    };\n  }\n\n  function ToMakeCanonicalSubstore(storable) {\n    var MakeSubstore = Substore(storable);\n    return function MakeCanonicalSubstore(storeGeneration) {\n      var substore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MakeSubstore();\n      var hashTable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Map();\n      return {\n        Allocate: function Allocate() {\n          var obj = substore.Allocate.apply(substore, arguments);\n          obj.storeGeneration = storeGeneration;\n          return obj;\n        },\n        Free: substore.Free,\n        GetCanon: function GetCanon(hash) {\n          var canon = hashTable.get(hash);\n          return canon;\n        },\n        SetCanon: function SetCanon(hash, node) {\n          return hashTable.set(hash, node);\n        },\n        Clear: function Clear() {\n          return substore.Clear() && hashTable.clear();\n        },\n        Show: function Show() {\n          return {\n            store: substore.Show(),\n            hashTable: hashTable.size\n          };\n        },\n        Copy: function Copy() {\n          return MakeCanonicalSubstore(storeGeneration, substore.Copy(), new Map(hashTable));\n        }\n      };\n    };\n  }\n\n  function BranchAllocate$1() {\n    var branch = [null, null, null, null];\n    branch.size = NaN;\n    branch.hash = NaN;\n    branch.edges = [null, null, null, null];\n    branch.corners = [0, 0, 0, 0];\n    branch.population = NaN;\n    return branch;\n  }\n\n  function BranchFree(branch) {\n    // for (let i = 0; i < 4; i++) {\n    //   branch[i] = null\n    //   branch.edges[i] = null\n    //   branch.corners[i] = 0\n    // }\n    branch.size = NaN;\n    branch.hash = NaN;\n    branch.population = NaN;\n    return branch;\n  }\n\n  var Branch$2 = {\n    Allocate: BranchAllocate$1,\n    Copy: Copy$3,\n    Free: BranchFree\n  };\n\n  function EdgeAllocate() {\n    var edge = [null, null];\n    edge.hash = NaN;\n    return edge;\n  }\n\n  function EdgeFree(edge) {\n    edge[HASH] = NaN;\n    return edge;\n  }\n\n  var Edge$2 = {\n    Allocate: EdgeAllocate,\n    Copy: Copy$1,\n    Free: EdgeFree\n  };\n  var Leaf$1 = {\n    Allocate: LeafAllocate,\n    Copy: Copy,\n    Free: LeafFree\n  };\n\n  function NeighborhoodAllocate() {\n    return {\n      size: NaN,\n      node: null,\n      neighbors: [null, null, null, null, null, null, null, null],\n      edges: [null, null, null, null],\n      corners: [0, 0, 0, 0],\n      next: null\n    };\n  }\n\n  function NeighborhoodCopy(edge) {\n    throw Error(\"TODO NeighborhoodCopy\");\n  }\n\n  function NeighborhoodFree(neighborhood) {\n    neighborhood.size = NaN;\n    return neighborhood;\n  }\n\n  var Neighborhood = {\n    Allocate: NeighborhoodAllocate,\n    Copy: NeighborhoodCopy,\n    Free: NeighborhoodFree\n  };\n  var MakeCanonicalStore = ToMakeCanonicalStore({\n    Branch: Branch$2,\n    Edge: Edge$2,\n    Leaf: Leaf$1,\n    Neighborhood: Neighborhood\n  });\n\n  function LetStore(store, fn) {\n    var BranchAllocate = store.Branch.Allocate;\n    var EdgeAllocate = store.Edge.Allocate;\n    var LeafAllocate = store.Leaf.Allocate;\n    var NeighborhoodAllocate = store.Neighborhood.Allocate;\n    var BranchCanon = store.Branch;\n    var EdgeCanon = store.Edge;\n    var LeafCanon = store.Leaf;\n    var NeighborhoodCanon = store.Neighborhood;\n    return Allocate.Branch.let(BranchAllocate, function () {\n      return Allocate.Edge.let(EdgeAllocate, function () {\n        return Allocate.Leaf.let(LeafAllocate, function () {\n          return Allocate.Neighborhood.let(NeighborhoodAllocate, function () {\n            return Canon.Branch.let(BranchCanon, function () {\n              return Canon.Edge.let(EdgeCanon, function () {\n                return Canon.Leaf.let(LeafCanon, function () {\n                  return Canon.Neighborhood.let(NeighborhoodCanon, fn);\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  }\n\n  function Make(grid, store, recycledStore) {\n    var revocable = function revocable(fn) {\n      return function () {\n        if (!store) throw TypeError(\"Cannot use revoked life reference\");\n        return fn.apply(void 0, arguments);\n      };\n    };\n\n    return {\n      grid: revocable(function () {\n        return grid;\n      }),\n      store: revocable(function () {\n        return store;\n      }),\n      takeStore: revocable(function () {\n        var s = store.Clear();\n        store = null;\n        return s;\n      }),\n      newStore: revocable(function () {\n        var rs = recycledStore ? recycledStore.Clear() : MakeCanonicalStore();\n        recycledStore = null;\n        return rs;\n      }),\n      hash: GetHash(grid)\n    };\n  }\n\n  function Empty() {\n    return FromLiving$3([]);\n  }\n\n  function FromLiving$3(locations) {\n    var store = MakeCanonicalStore(),\n        grid = LetStore(store, function () {\n      return FromLiving$2(locations);\n    });\n    return Make(grid, store);\n  }\n\n  function Copy$6(life, opts) {\n    var store = life.newStore(),\n        grid = LetStore(store, function () {\n      return Copy$5(life.grid());\n    }),\n        recycledStore = Go(opts, 'canFree') && life.takeStore();\n    return Make(grid, store, recycledStore);\n  }\n\n  function Get$2(life, location) {\n    return Get$1(life.grid(), location);\n  }\n\n  function Set(life, location, state, opts) {\n    return SetMany$3(life, [[location, state]], opts);\n  }\n\n  function SetMany$3(life, pairs, opts) {\n    var store = life.newStore(),\n        grid = LetStore(store, function () {\n      return SetMany$2(life.grid(), pairs);\n    }),\n        recycledStore = Go(opts, 'canFree') && life.takeStore();\n    return Make(grid, store, recycledStore);\n  }\n\n  function Add(life, location) {\n    return Set(life, location, true);\n  }\n\n  function BoundingRect$3(life) {\n    return BoundingRect$2(life.grid());\n  }\n\n  var Has = Get$2;\n\n  function Hash(life) {\n    return GetHash(life.grid());\n  }\n\n  function Population(life) {\n    return GetPopulation(life.grid());\n  }\n\n  function Remove(life, location) {\n    return Set(life, location, false);\n  }\n\n  function Render$4(life, renderCfg) {\n    var imageDataAsU8Clamped = renderCfg.imageData,\n        viewport = renderCfg.viewport,\n        colorsRGBA = renderCfg.colors,\n        imageData = {\n      data: new Int32Array(imageDataAsU8Clamped.data.buffer),\n      width: imageDataAsU8Clamped.width,\n      height: imageDataAsU8Clamped.height\n    },\n        colors = {\n      alive: RGBAToInt32(colorsRGBA.alive),\n      dead: RGBAToInt32(colorsRGBA.dead)\n    },\n        scaleX = imageDataAsU8Clamped.width / viewport.width,\n        scaleY = imageDataAsU8Clamped.height / viewport.height,\n        scale = Math.min(scaleX, scaleY);\n    Render$3(life.grid(), {\n      imageData: imageData,\n      colors: colors,\n      viewport: viewport,\n      scale: scale\n    });\n    return imageDataAsU8Clamped;\n  }\n\n  var RGBAToInt32 = function RGBAToInt32(rgba) {\n    return new Int32Array(new Uint8ClampedArray(rgba).buffer)[0];\n  };\n\n  function Next$3(life, opts) {\n    var store = life.newStore(),\n        grid = LetStore(store, function () {\n      return Next$2(life.grid());\n    }),\n        recycledStore = Go(opts, 'canFree') && life.takeStore();\n    return Make(grid, store, recycledStore);\n  }\n\n  function Values(life) {\n    return Living$2(life.grid());\n  }\n\n  function Go(obj, key) {\n    return typeof obj === 'object' && obj[key];\n  }\n\n  exports.Add = Add;\n  exports.BoundingRect = BoundingRect$3;\n  exports.Copy = Copy$6;\n  exports.Empty = Empty;\n  exports.FromLiving = FromLiving$3;\n  exports.Get = Get$2;\n  exports.Has = Has;\n  exports.Hash = Hash;\n  exports.Next = Next$3;\n  exports.Population = Population;\n  exports.Remove = Remove;\n  exports.Render = Render$4;\n  exports.Set = Set;\n  exports.SetMany = SetMany$3;\n  exports.Values = Values;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});"],"sourceRoot":""}